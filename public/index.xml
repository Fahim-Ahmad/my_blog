<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fahim Ahmad</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Fahim Ahmad</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© Fahim Ahmad (2020)</copyright><lastBuildDate>Sat, 14 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>Fahim Ahmad</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Using Survey Weight</title>
      <link>/post/using-survey-weight-in-r/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      <guid>/post/using-survey-weight-in-r/</guid>
      <description>


&lt;p&gt;In R working with survey weight is made possible using &lt;code&gt;survey&lt;/code&gt; package. Let’s use below data frame as an exmaple here:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1000)
age &amp;lt;- c(18:100)
age &amp;lt;- sample(age, 100, replace = TRUE)
gender &amp;lt;- c(&amp;quot;Male&amp;quot;, &amp;quot;Female&amp;quot;)
gender &amp;lt;- sample(gender, 100, replace = TRUE)
country &amp;lt;- c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;)
country &amp;lt;- sample(country, 100, replace = TRUE)

df &amp;lt;- data.frame(age, gender, country)

df$weight[df$gender==&amp;quot;Female&amp;quot;] &amp;lt;-50/sum(df$gender==&amp;quot;Female&amp;quot;)
df$weight[df$gender==&amp;quot;Male&amp;quot;] &amp;lt;-50/sum(df$gender==&amp;quot;Male&amp;quot;)

# summary of data
summary(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       age           gender            country              weight      
##  Min.   :18.00   Length:100         Length:100         Min.   :0.8929  
##  1st Qu.:38.75   Class :character   Class :character   1st Qu.:0.8929  
##  Median :54.50   Mode  :character   Mode  :character   Median :0.8929  
##  Mean   :55.79                                         Mean   :1.0000  
##  3rd Qu.:73.25                                         3rd Qu.:1.1364  
##  Max.   :97.00                                         Max.   :1.1364&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The most important variable here is the &lt;em&gt;weight&lt;/em&gt; variable which is constructed to balance the sex ratio.&lt;/p&gt;
&lt;p&gt;Inside the &lt;code&gt;survey&lt;/code&gt; package, there is &lt;code&gt;svydesign()&lt;/code&gt; function that can be used to link a data frame with a weight.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;survey&amp;quot;)
library(survey)
df.w &amp;lt;- svydesign(ids = ~1, data = df, weights = ~weight)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The resulting object is not a data frame anymore, but is a list of different objects that can be seen using &lt;code&gt;attributes()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;attributes(df.w)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $names
## [1] &amp;quot;cluster&amp;quot;    &amp;quot;strata&amp;quot;     &amp;quot;has.strata&amp;quot; &amp;quot;prob&amp;quot;       &amp;quot;allprob&amp;quot;   
## [6] &amp;quot;call&amp;quot;       &amp;quot;variables&amp;quot;  &amp;quot;fpc&amp;quot;        &amp;quot;pps&amp;quot;       
## 
## $class
## [1] &amp;quot;survey.design2&amp;quot; &amp;quot;survey.design&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Therefore, we need to use &lt;code&gt;survey&lt;/code&gt;’s own analytical functions. For example, here is a comparison of unweighted and weighted sex ratio.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# unweighted
df %&amp;gt;%
{table(.$gender)} %&amp;gt;%
  prop.table()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Female   Male 
##   0.44   0.56&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# weighted
df.w %&amp;gt;%
  svytable(~gender, .) %&amp;gt;%
  prop.table()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## gender
## Female   Male 
##    0.5    0.5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;svytable()&lt;/code&gt; can be used to create more than one-way frequency/percentage tables as well. For example, let’s create contingency table of &lt;code&gt;gender&lt;/code&gt; and &lt;code&gt;country&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df.w %&amp;gt;%
svytable(~gender+country, .) %&amp;gt;%
  prop.table(2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         country
## gender           A         B
##   Female 0.5600000 0.4329897
##   Male   0.4400000 0.5670103&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Below are other useful functions of &lt;code&gt;survey&lt;/code&gt; package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# to compute weighted mean
svymean(~age, df.w)
# to compute weighted quantiles
svyquantile(~age, df.w, c(.25, .50, .75))
# to compute weigted variance
svyvar(~age, df.w)
# to perform t-test
svyttest(age~gender, df.w)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Combining Multiple Plots using Patchwork</title>
      <link>/post/combining-multiple-plots-using-patchwork/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
      <guid>/post/combining-multiple-plots-using-patchwork/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#loading-required-packages&#34;&gt;loading required packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#creating-example-plots&#34;&gt;creating example plots&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#combining-plots-using-the-patchwork-package&#34;&gt;Combining plots using the patchwork package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#combining-plots-beside-or-on-top-of-each-other&#34;&gt;Combining plots beside or on top of each other&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#controlling-the-legend&#34;&gt;Controlling the legend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#adding-an-empty-area&#34;&gt;Adding an empty area&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#combining-plot-and-table&#34;&gt;Combining plot and table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#annotation&#34;&gt;Annotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modifying-the-result-of-the-patchwork&#34;&gt;Modifying the result of the patchwork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Data is just a collection of numbers until it is turned into a story. Sometimes, the combination of several plots is required for telling a great data-driven story.&lt;/p&gt;
&lt;p&gt;It is a while that I am using &lt;strong&gt;R&lt;/strong&gt; for data analysis and visualization and I have been using several packages for combining multiple plots. During this period, I found the &lt;strong&gt;patchwork&lt;/strong&gt; package the most straightforward way of combining multiple ggplot plots which I will explore it in this post.&lt;/p&gt;
&lt;div id=&#34;loading-required-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;loading required packages&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;patchwork&amp;quot;)
library(patchwork)
# install.packages(&amp;quot;gapminder&amp;quot;)
library(gapminder)
# install.packages(&amp;quot;dplyr&amp;quot;)
library(dplyr)
# install.packages()
library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-example-plots&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;creating example plots&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gdpPercap_lifeExpt &amp;lt;- gapminder %&amp;gt;% 
  ggplot(aes(x=gdpPercap, y=lifeExp, col = continent)) +
  geom_point() + theme_bw() +
   labs(x = NULL, y = NULL)

lifeExpt_densityPlot &amp;lt;- gapminder %&amp;gt;%
  ggplot(aes(x=lifeExp, fill=continent)) +
  geom_density(alpha=0.4) + theme_bw() +
   labs(x = NULL, y = NULL)

lifeExpt_boxPlot &amp;lt;- gapminder %&amp;gt;% 
  ggplot(aes(x=continent, y=lifeExp, col=continent)) +
  geom_boxplot() +
  geom_jitter(width=0.2, alpha=0.4) + theme_bw() +
    labs(x = NULL, y = NULL)

gdpPercap_densityPlot &amp;lt;- gapminder %&amp;gt;%
  ggplot(aes(x = gdpPercap, fill = continent)) +
  geom_density(alpha = 0.4) + theme_bw() +
  labs(x = NULL, y = NULL)

gdpPercap_boxPlot &amp;lt;- gapminder %&amp;gt;% 
  ggplot(aes(x=continent, y=gdpPercap, col=continent)) +
  geom_boxplot() +
  geom_jitter(width=0.2, alpha=0.4) + theme_bw() +
    labs(x = NULL, y = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;combining-plots-using-the-patchwork-package&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Combining plots using the patchwork package&lt;/h1&gt;
&lt;p&gt;Them most simple and straightforward way to combine plots is to use the &lt;code&gt;+&lt;/code&gt; operator.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lifeExpt_densityPlot + lifeExpt_boxPlot + gdpPercap_densityPlot + gdpPercap_boxPlot&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;combining-plots-beside-or-on-top-of-each-other&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Combining plots beside or on top of each other&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;+&lt;/code&gt; operator combines plots without indicating anything about the desired layout. By default, the &lt;strong&gt;patchwork&lt;/strong&gt; package keeps the grid square and fill the grid in row order. This can be controlled by &lt;code&gt;plot_layout()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lifeExpt_densityPlot + lifeExpt_boxPlot + gdpPercap_densityPlot + gdpPercap_boxPlot +
  plot_layout(nrow = 3, byrow = F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By having a one-row layout &lt;code&gt;plot_layout(nrow = 1)&lt;/code&gt; or one-column layout &lt;code&gt;plotlayout(ncol = 1)&lt;/code&gt;, plots can be placed on top of each other or beside each other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Likewise, &lt;strong&gt;patchwork&lt;/strong&gt; provides two more operators. &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;|&lt;/code&gt; will place the plots beside each other, while &lt;code&gt;/&lt;/code&gt; will stack them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lifeExpt_densityPlot | lifeExpt_boxPlot) / gdpPercap_lifeExpt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;controlling-the-legend&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Controlling the legend&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;plotlayout()&lt;/code&gt; function can also be used to place the legends in a common place instead of next to each plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lifeExpt_densityPlot + lifeExpt_boxPlot + gdpPercap_densityPlot + gdpPercap_boxPlot +
  plot_layout(nrow = 3, byrow = F, guides = &amp;#39;collect&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gdpPercap_lifeExpt / ((lifeExpt_densityPlot / lifeExpt_boxPlot) | (gdpPercap_densityPlot / gdpPercap_boxPlot)) +
  plot_layout(guides = &amp;#39;collect&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-an-empty-area&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Adding an empty area&lt;/h1&gt;
&lt;p&gt;It is also possible to add an empty area between the plots by creating an empty &lt;em&gt;ggplot&lt;/em&gt; object using the &lt;code&gt;plot_spacer()&lt;/code&gt; and adding it to the patchwork.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lifeExpt_densityPlot | lifeExpt_boxPlot) / plot_spacer() / gdpPercap_lifeExpt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;combining-plot-and-table&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Combining plot and table&lt;/h1&gt;
&lt;p&gt;Sometimes you may want to combine a non-ggplot content with a &lt;em&gt;ggplot&lt;/em&gt; plot. For instance, let’s combine the correlation table between life expectancy, GDP per capita, and population with the GDP per capita and life expectancy scatter plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;gridExtra&amp;quot;)
library(gridExtra)

correlation &amp;lt;- cor(gapminder[,c(4:6)], method = &amp;#39;pearson&amp;#39;) %&amp;gt;% round(digits = 3)
gdpPercap_lifeExpt / tableGrob(correlation)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;annotation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Annotation&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;plot_annotation()&lt;/code&gt; function can be used to control different aspects of the annotation of the final plot such as title, subtitle, and caption.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lifeExpt_densityPlot | lifeExpt_boxPlot) / gdpPercap_lifeExpt + 
  plot_layout(guides = &amp;#39;collect&amp;#39;) +
  plot_annotation(title = &amp;#39;THIS IS TITLE&amp;#39;, subtitle = &amp;#39;this is subtitle&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;plot_annotation()&lt;/code&gt; function also provide the &lt;code&gt;tag_levels&lt;/code&gt;, &lt;code&gt;tag_prefix&lt;/code&gt;, and &lt;code&gt;tag_suffix&lt;/code&gt; arguments for auto-tagging to identify the subplots in text.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;tag_levels&lt;/strong&gt; = A character vector defining the enumeration format to use at each level. Possible values are ‘a’ for lowercase letters, ‘A’ for uppercase letters, ‘1’ for numbers, ‘i’ for lowercase Roman numerals, and ‘I’ for uppercase Roman numerals.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;tag_prefix&lt;/strong&gt; = String that should appear before the tag.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;tag_suffix&lt;/strong&gt; = String that should appear after the tag.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lifeExpt_densityPlot | lifeExpt_boxPlot) / gdpPercap_lifeExpt +
  plot_layout(guides = &amp;#39;collect&amp;#39;) +
  plot_annotation(tag_levels = &amp;quot;I&amp;quot;, tag_prefix = &amp;quot;Plot &amp;quot;, tag_suffix = &amp;quot; :&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;modifying-the-result-of-the-patchwork&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Modifying the result of the patchwork&lt;/h1&gt;
&lt;p&gt;The resulting object of the patchwork is a ggplot object. Which means if you continue adding objects such as geoms, scales, etc. it will be referenced to the last added plot. For example, let’s italicize the x-axis text and set the angle to 45.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lifeExpt_densityPlot | lifeExpt_boxPlot) / gdpPercap_lifeExpt +
  plot_layout(guides = &amp;#39;collect&amp;#39;) +
  plot_annotation(tag_levels = &amp;quot;I&amp;quot;, tag_prefix = &amp;quot;Plot &amp;quot;, tag_suffix = &amp;quot; :&amp;quot;) +
  theme(axis.text.x = element_text(angle = -45, face = &amp;#39;italic&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Often when it comes to modifying the plot it is more reasonable to modify everything at once. To do so, instead of the &lt;code&gt;+&lt;/code&gt; operator, the &lt;code&gt;&amp;amp;&lt;/code&gt; operator can be used.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(lifeExpt_densityPlot | lifeExpt_boxPlot) / gdpPercap_lifeExpt +
  plot_layout(guides = &amp;#39;collect&amp;#39;) +
  plot_annotation(tag_levels = &amp;quot;I&amp;quot;, tag_prefix = &amp;quot;Plot &amp;quot;, tag_suffix = &amp;quot; :&amp;quot;) &amp;amp;
  theme(axis.text.x = element_text(angle = -45, face = &amp;#39;italic&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-11-combining-multiple-plots-using-patchwork/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2: geom_histogram &amp; facet_wrap with different vertical lines on each facet</title>
      <link>/post/ggplot2-facet-wrap-with-different-vertical-lines-on-each-facet/</link>
      <pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate>
      <guid>/post/ggplot2-facet-wrap-with-different-vertical-lines-on-each-facet/</guid>
      <description>


&lt;p&gt;The &lt;code&gt;geom_histogram()&lt;/code&gt; function from &lt;strong&gt;ggplot2&lt;/strong&gt; package is used to create a histogram plot. For example, let’s plot the distribution of &lt;code&gt;Sepal.Length&lt;/code&gt; from &lt;strong&gt;iris&lt;/strong&gt; data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
theme_set(theme_bw())
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = &amp;quot;orange&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-03-ggplot2-facet-wrap-with-different-vertical-lines-on-each-facet/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To add a vertical line to show the mean value of &lt;code&gt;Sepal.Length&lt;/code&gt;, we can use &lt;code&gt;geom_vline()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = &amp;quot;orange&amp;quot;) +
  geom_vline(data = iris, aes(xintercept = mean(Sepal.Length)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-03-ggplot2-facet-wrap-with-different-vertical-lines-on-each-facet/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;One of the most powerful aspects of &lt;strong&gt;ggplot2&lt;/strong&gt; is the ease with which you can create multiple sub-plots using &lt;code&gt;facet_wrap()&lt;/code&gt;. For example, let’s plot the distribution of &lt;code&gt;Sepal.Length&lt;/code&gt; by each group of &lt;code&gt;Species&lt;/code&gt; from &lt;strong&gt;iris&lt;/strong&gt; data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = &amp;quot;orange&amp;quot;) +
  facet_wrap(~Species) +
  geom_vline(data = iris, aes(xintercept = mean(Sepal.Length)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-03-ggplot2-facet-wrap-with-different-vertical-lines-on-each-facet/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While using &lt;code&gt;facet_wrap()&lt;/code&gt; each plot shows a different subset of the data, however, the &lt;code&gt;geom_vline()&lt;/code&gt; adds the vertical line on the same x-intercept in all plots. For instance, in the above histograms the vertical line shows the overall mean of &lt;code&gt;Sepal.Length&lt;/code&gt; column instead of mean of each group.&lt;/p&gt;
&lt;p&gt;It’s more practical to add a vertical line on each facet showing the mean for each group of data. To do so, a separate data frame containing the mean of each group should be created to use with &lt;code&gt;geom_vline()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
vline &amp;lt;- summarise(group_by(iris,Species), mean = mean(Sepal.Length))
vline&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 × 2
##   Species     mean
##   &amp;lt;fct&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 setosa      5.01
## 2 versicolor  5.94
## 3 virginica   6.59&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = &amp;quot;orange&amp;quot;) +
  facet_wrap(~Species) +
  geom_vline(data = vline, aes(xintercept = mean))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2022-04-03-ggplot2-facet-wrap-with-different-vertical-lines-on-each-facet/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploring Relationship Between Variables | scatter-plot</title>
      <link>/post/exploring-relationship-between-variables-scatter-plot/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/post/exploring-relationship-between-variables-scatter-plot/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#when-to-use-scatterplot&#34;&gt;When to use scatterplot?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scatterplot-using-the-base-r-functions&#34;&gt;Scatterplot using the base R functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scatterplot-using-ggplot2-package&#34;&gt;Scatterplot using ggplot2 package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;when-to-use-scatterplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;When to use scatterplot?&lt;/h3&gt;
&lt;p&gt;When dealing with numerical data, the most common way to graphically explore the patterns and relationships between variables and draw a conclusion about how variables correlate to one another is by plotting the data points using a scatterplot. A scatterplot uses dots/markers to represent values for two numeric variables where the position of each dot indicates values for an individual data point in the (x,y) coordinates.&lt;/p&gt;
&lt;p&gt;Scatterplots are used primarily to determine the &lt;strong&gt;strength&lt;/strong&gt; and &lt;strong&gt;direction&lt;/strong&gt; of the relationship between two numeric variables.&lt;/p&gt;
&lt;p&gt;The direction of the relationship is determined by how &lt;code&gt;y&lt;/code&gt; variable changes by an increase in &lt;code&gt;x&lt;/code&gt; variable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the &lt;code&gt;y&lt;/code&gt; variable tends to increase by increasing the &lt;code&gt;x&lt;/code&gt; variable, it shows the positive relationship between two variables.&lt;/li&gt;
&lt;li&gt;When the &lt;code&gt;y&lt;/code&gt; variable tends to decrease by increasing the &lt;code&gt;x&lt;/code&gt; variable, it shows the negative relationship between two variables.&lt;/li&gt;
&lt;li&gt;If it is impossible to establish either of the above criteria, there is not any meaningful relationship between the variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The strength of the relationship is determined by how spread the data points are in the (x,y) coordinates.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the data points lie exactly along a straight line, it shows the perfect relationship.&lt;/li&gt;
&lt;li&gt;When the data points are closed to one another and are concentrated near the straight line, it shows a strong relationship.&lt;/li&gt;
&lt;li&gt;If the data points appeared randomly scattered or equally distributed across the plot, it shows no relationship or a weak relationship.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/ExploringRelationshipBetweenVariablesscatterplot.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scatterplot-using-the-base-r-functions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scatterplot using the base R functions&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;plot(x,y)&lt;/code&gt; function is used to create a scatterplot where &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are columns to be plotted in the x-axis and y-axis, respectively. Each point’s horizontal position indicates the value of &lt;code&gt;x&lt;/code&gt; (column that is plotted in the x-axis) and the vertical position of each point indicates the value of &lt;code&gt;y&lt;/code&gt; (column that is plotted in the y-axis).&lt;/p&gt;
&lt;p&gt;For example, you collect data from 30 individuals about their education level, age, and salary as well as the gender of each individual as below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(
  gender = c(&amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Male&amp;quot;),
  age =       c(30,    25,    27,    28,    24,    29,    27,    24,    22,    NA,    NA,    21,    25,    27,    29,    24,    22,    18,    NA,    25,    22,    23,    27,    NA,    18,    23,    19,    26,    23, 22),
  salary =    c(25000, 31000, 35000, 27000, 32000, 26000, 31000, 30000, 35000, 38000, 37000, 36000, 33000, 30000, 25000, 29000, 37000, 28000, 38000, 31000, 37000, 34000, 31000, 38000, 38000, 35000, 37000, 29000, 37000, 36000),
  education = c(9,     12,    16,    10,    14,    10,    11,    14,    16,    18,    18,    NA,    14,    12,    9,     13,    15,    10,    18,    12,    17,    16,    13,    18,    NA,    16,    NA,    12,    18, 17)
)

df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gender age salary education
## 1    Male  30  25000         9
## 2    Male  25  31000        12
## 3    Male  27  35000        16
## 4    Male  28  27000        10
## 5    Male  24  32000        14
## 6    Male  29  26000        10
## 7    Male  27  31000        11
## 8    Male  24  30000        14
## 9    Male  22  35000        16
## 10 Female  NA  38000        18
## 11 Female  NA  37000        18
## 12 Female  21  36000        NA
## 13 Female  25  33000        14
## 14 Female  27  30000        12
## 15 Female  29  25000         9
## 16 Female  24  29000        13
## 17 Female  22  37000        15
## 18 Female  18  28000        10
## 19 Female  NA  38000        18
## 20 Female  25  31000        12
## 21   Male  22  37000        17
## 22   Male  23  34000        16
## 23   Male  27  31000        13
## 24   Male  NA  38000        18
## 25 Female  18  38000        NA
## 26 Female  23  35000        16
## 27 Female  19  37000        NA
## 28 Female  26  29000        12
## 29 Female  23  37000        18
## 30   Male  22  36000        17&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By plotting the data points we can explore the relationship between age, education, and salary.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# plot Age against Salary
plot(df$age, df$salary, main = &amp;#39;Age vs. Salary&amp;#39;)

# plot Education against Salary
plot(df$education, df$salary, main = &amp;#39;Education vs. Salary&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The plot shown above reveals that those who are younger tend to have a higher salary. Moreover, a higher education level can predict a higher salary as well.&lt;/p&gt;
&lt;p&gt;Let’s plot age against education to explore the relationship between the two variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(df$age, df$education, main = &amp;quot;Age vs. Education&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It is also possible to explore the relationship between age, salary, and education in one plot by creating a scatterplot matrix using &lt;code&gt;pairs()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pairs(~salary+education+age, data = df, main = &amp;quot;Scatterplot Matrix&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The above plot confirms the same findings. It shows a positive correlation between education and salary, however, there is a negative correlation between age and salary. Furthermore, those who are younger tend to have a higher education level.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scatterplot-using-ggplot2-package&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scatterplot using ggplot2 package&lt;/h3&gt;
&lt;p&gt;As I mentioned in the previous posts, it is preferred to use the ggplot2 packages for visualization because the resulting plot is easy to modify and it is more popular among R users to use the ggplot2 package. The &lt;code&gt;geom_point()&lt;/code&gt; function can be used from &lt;strong&gt;ggplot2&lt;/strong&gt; package to create scatterplots. For example, let’s plot age against salary.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

ggplot(df, aes(x = age, y = salary)) +
  geom_point() +
  theme_bw() +
  labs(title = &amp;quot;Age vs. Salary&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The common issue with scatterplot is when we have lots of data, the points will overlap (known as overplotting). There are several ways to alleviate this issue. The most common way is to use &lt;code&gt;geom_jitter()&lt;/code&gt; instead of &lt;code&gt;geom_point()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;geom_jitter()&lt;/code&gt; adds a small amount of random noise to the location of each point to make the plot easier to read. For example, compare the below plot to the one above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x = age, y = salary)) +
  geom_jitter() +
  theme_bw() +
  labs(title = &amp;quot;Age vs. Salary&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Scatterplots are very useful in identifying the relationship between two numerical variables among several groups as well by adding a third variable. When the third variable is categorical data, the most common way is by giving the dots a distinct hue to show the membership of each point to a respective group. For instance, let’s plot the relationship between age and salary among males and females.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x = age, y = salary, color = gender)) +
  geom_jitter() +
  theme_bw() +
  labs(title = &amp;quot;Age vs. Salary, by Gender&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To depict the third variable that has numeric values, the common way is to change the dots’ size based on the values of the third variable, where larger points indicate higher values and smaller points indicate lower values. Moreover, hue can also be used when the third variable has numeric values by using a sequence of colors rather than using distinct colors for points like in the categorical case.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x = age, y = salary, size = education)) +
  geom_jitter() +
  theme_bw() +
  labs(title = &amp;quot;Age vs. Salary&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x = age, y = salary, color = education)) +
  geom_jitter() +
  scale_fill_gradient(low = &amp;quot;orange&amp;quot;, high = &amp;quot;red&amp;quot;, na.value = &amp;quot;grey50&amp;quot;, aesthetics = &amp;quot;color&amp;quot;) +
  theme_bw() +
  labs(title = &amp;quot;Age vs. Salary&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2021-08-10-exploring-relationship-between-variables-scatter-plot/index_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Also, adding another dimension to create a 3D scatterplot can be used to depict the third variable that has numeric values as another alternative rather than changing the dots’ size. Since the ggplot2 package does not produce plots with three dimensions, I use the plotly package as an example here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plotly)
plot_ly(df, x = ~age, y = ~salary, z = ~education, type = &amp;quot;scatter3d&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;visdat&#34;:{&#34;de1a7254039c&#34;:[&#34;function () &#34;,&#34;plotlyVisDat&#34;]},&#34;cur_data&#34;:&#34;de1a7254039c&#34;,&#34;attrs&#34;:{&#34;de1a7254039c&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;z&#34;:{},&#34;alpha_stroke&#34;:1,&#34;sizes&#34;:[10,100],&#34;spans&#34;:[1,20],&#34;type&#34;:&#34;scatter3d&#34;}},&#34;layout&#34;:{&#34;margin&#34;:{&#34;b&#34;:40,&#34;l&#34;:60,&#34;t&#34;:25,&#34;r&#34;:10},&#34;scene&#34;:{&#34;xaxis&#34;:{&#34;title&#34;:&#34;age&#34;},&#34;yaxis&#34;:{&#34;title&#34;:&#34;salary&#34;},&#34;zaxis&#34;:{&#34;title&#34;:&#34;education&#34;}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;showlegend&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;config&#34;:{&#34;showSendToCloud&#34;:false},&#34;data&#34;:[{&#34;x&#34;:[30,25,27,28,24,29,27,24,22,25,27,29,24,22,18,25,22,23,27,23,26,23,22],&#34;y&#34;:[25000,31000,35000,27000,32000,26000,31000,30000,35000,33000,30000,25000,29000,37000,28000,31000,37000,34000,31000,35000,29000,37000,36000],&#34;z&#34;:[9,12,16,10,14,10,11,14,16,14,12,9,13,15,10,12,17,16,13,16,12,18,17],&#34;type&#34;:&#34;scatter3d&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;,&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;}},&#34;error_y&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;error_x&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(31,119,180,1)&#34;},&#34;frame&#34;:null}],&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;shinyEvents&#34;:[&#34;plotly_hover&#34;,&#34;plotly_click&#34;,&#34;plotly_selected&#34;,&#34;plotly_relayout&#34;,&#34;plotly_brushed&#34;,&#34;plotly_brushing&#34;,&#34;plotly_clickannotation&#34;,&#34;plotly_doubleclick&#34;,&#34;plotly_deselect&#34;,&#34;plotly_afterplot&#34;,&#34;plotly_sunburstclick&#34;],&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Detecting Duplicates (base R vs. dplyr)</title>
      <link>/post/detecting-duplicates/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/post/detecting-duplicates/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#removing-duplicates-based-on-a-single-variable&#34;&gt;Removing duplicates based on a single variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#removing-duplicates-based-on-the-combination-of-multiple-variables&#34;&gt;Removing duplicates based on the combination of multiple variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;imgs/Duplicates.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sometimes you may encounter duplicated values in the data which might cause problems depending on how you plan to use the data. In this post, I provide an overview of &lt;code&gt;duplicated()&lt;/code&gt; function from base R and the &lt;code&gt;distinct()&lt;/code&gt; function from &lt;strong&gt;dplyr&lt;/strong&gt; package to detect and remove duplicates.&lt;/p&gt;
&lt;p&gt;I will be using the following data frame as an example in this post.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1000)
df &amp;lt;- data.frame(
  ID = sample(paste0(&amp;quot;ID-00&amp;quot;, 1:7), 10, replace = T),
  value_1 = sample(1:7, 10, replace = T),
  value_2 = sample(2:5, 10, replace = T)
)

df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ID value_1 value_2
## 1  ID-004       5       2
## 2  ID-003       6       5
## 3  ID-006       1       3
## 4  ID-003       1       4
## 5  ID-005       5       5
## 6  ID-003       2       3
## 7  ID-005       2       2
## 8  ID-002       4       3
## 9  ID-006       7       2
## 10 ID-006       2       3&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;removing-duplicates-based-on-a-single-variable&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Removing duplicates based on a single variable&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;duplicated()&lt;/code&gt; function returns a logical vector where &lt;code&gt;TRUE&lt;/code&gt; specifies which rows of the data frame are duplicates.&lt;/p&gt;
&lt;p&gt;For instance, &lt;code&gt;duplicated(df[&amp;quot;ID&amp;quot;])&lt;/code&gt; returns the following vector.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##  [1] FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;duplicated()&lt;/code&gt; function preserves the first occurrence in the process of identifying the duplicate values, if you want to consider the duplication from the reverse side, then set the &lt;code&gt;fromLast&lt;/code&gt; argument to &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s use the above vector to exclude the duplicated values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df[!duplicate_rows, ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       ID value_1 value_2
## 1 ID-004       5       2
## 2 ID-003       6       5
## 3 ID-006       1       3
## 5 ID-005       5       5
## 8 ID-002       4       3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An alternative way to select unique values is &lt;code&gt;dplyr::distinct()&lt;/code&gt; function that yields a similar result as above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dplyr::distinct(df, ID, .keep_all = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       ID value_1 value_2
## 1 ID-004       5       2
## 2 ID-003       6       5
## 3 ID-006       1       3
## 4 ID-005       5       5
## 5 ID-002       4       3&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The .&lt;code&gt;keep_all&lt;/code&gt; argument is used to retain all other columns in the output data frame.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;removing-duplicates-based-on-the-combination-of-multiple-variables&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Removing duplicates based on the combination of multiple variables&lt;/h1&gt;
&lt;p&gt;The above chunks of codes remove the duplicated rows based on a single column. What if we want to remove duplicates based on more than a single column?&lt;/p&gt;
&lt;p&gt;One way is to concatenate the columns in which you want to check the presence of duplicates. For example, let’s remove the rows where &lt;strong&gt;value_1&lt;/strong&gt; and &lt;strong&gt;value_2&lt;/strong&gt; are duplicated.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- dplyr::mutate(df, value_1_2 = paste(value_1, value_2))
df[!duplicated(df[c(&amp;quot;value_1_2&amp;quot;)]), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       ID value_1 value_2 value_1_2
## 1 ID-004       5       2       5 2
## 2 ID-003       6       5       6 5
## 3 ID-006       1       3       1 3
## 4 ID-003       1       4       1 4
## 5 ID-005       5       5       5 5
## 6 ID-003       2       3       2 3
## 7 ID-005       2       2       2 2
## 8 ID-002       4       3       4 3
## 9 ID-006       7       2       7 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Below is an efficient way of detecting duplicates based on the combination of multiple columns without concatenating the values of the columns in which we want to identify the duplicated values:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# using duplicated() function
df[!duplicated(df[c(&amp;quot;value_1&amp;quot;, &amp;quot;value_2&amp;quot;)]), ]

# using distinct() function
dplyr::distinct(df, value_1, value_2, .keep_all = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       ID value_1 value_2 value_1_2
## 1 ID-004       5       2       5 2
## 2 ID-003       6       5       6 5
## 3 ID-006       1       3       1 3
## 4 ID-003       1       4       1 4
## 5 ID-005       5       5       5 5
## 6 ID-003       2       3       2 3
## 7 ID-005       2       2       2 2
## 8 ID-002       4       3       4 3
## 9 ID-006       7       2       7 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It seems that both approaches work very well; however, the advantage of using &lt;code&gt;duplicated()&lt;/code&gt; function from base R is it returns a logical vector identifying the duplicated rows that can be used to either drop the duplicated rows or keep only these rows for further investigation while the &lt;code&gt;distinct()&lt;/code&gt; function directly removes the duplicated rows without specifying which row has duplicate values.&lt;/p&gt;
&lt;p&gt;For instance, let’s keep the duplicated ID numbers only.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df[duplicated(df[&amp;quot;ID&amp;quot;], fromLast = F), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ID value_1 value_2 value_1_2
## 4  ID-003       1       4       1 4
## 6  ID-003       2       3       2 3
## 7  ID-005       2       2       2 2
## 9  ID-006       7       2       7 2
## 10 ID-006       2       3       2 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As mentioned above, the &lt;code&gt;duplicated()&lt;/code&gt; function does not assign the first occurrence in the process of identifying the duplicated values as duplicates. Thus, we need to count backward as well to consider the duplication from the reverse side. To do so, we need to set the &lt;code&gt;fromLast&lt;/code&gt; argument to &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df[duplicated(df[&amp;quot;ID&amp;quot;], fromLast = F) | duplicated(df[&amp;quot;ID&amp;quot;], fromLast = T), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ID value_1 value_2 value_1_2
## 2  ID-003       6       5       6 5
## 3  ID-006       1       3       1 3
## 4  ID-003       1       4       1 4
## 5  ID-005       5       5       5 5
## 6  ID-003       2       3       2 3
## 7  ID-005       2       2       2 2
## 9  ID-006       7       2       7 2
## 10 ID-006       2       3       2 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Methods for Transforming Data to Normal Distribution</title>
      <link>/post/methods-for-transforming-data-to-normal-distribution-in-r/</link>
      <pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/methods-for-transforming-data-to-normal-distribution-in-r/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dealing-with-the-positive-skewness&#34;&gt;Dealing with the positive skewness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dealing-with-the-negative-skewness&#34;&gt;Dealing with the negative skewness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Before we get deep into transforming skewed data, let’s quickly talk around the normal distribution and skewness coefficient, or have a look at my previous post to have a detailed insight on different types of distribution of data &lt;a href=&#34;https://fahimahmad.netlify.app/post/skewness-definition-and-its-importance-in-data-science/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The normal distribution is a statistical concept that denotes the probability distribution of data which has a bell-shaped curve. That is, the normal distribution is symmetrical on both sides where mean, median, and mode are equal. The skewness coefficient of a normal distribution is 0 that can be used as a reference to measure the extent and direction of deviation of the distribution of a given data from the normal distribution.&lt;/p&gt;
&lt;p&gt;A positively skewed data has a skewness of greater than 0, whereas the negatively skewed data has a skewness of lower than 0. In other words, the data points tend to concentrate around the lower values in a positively skewed data and the mean is greater than the median, where the opposite is true in a negatively skewed data.&lt;/p&gt;
&lt;p&gt;Oftentimes the real-life data do not follow the normal distribution which undermines the validity of the parametric statistical models and inferences. Thus, some sort of modification is needed. That is where the data transformation comes in to make the distribution of the data as normal as possible so that the statistical inferences drawn from the data become more valid by reducing the skewness of the original data.&lt;/p&gt;
&lt;p&gt;In this post, I try to cover the most common methods of transforming a skewed distribution into a normal distribution, and the foundational step you must consider before deciding which method to apply.&lt;/p&gt;
&lt;p&gt;Loading required packages:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  library(data.table) # Enhanced data.frame
  library(dplyr) # Data manipulation
  library(tidyr) # Reshape the data between wide and long formats
  library(ggplot2) # Data visualization
  library(patchwork) # Re-arrange ggplot2 plots
  library(moments) # Calculating skewness coefficient
  library(gt) # Creating an object of class &amp;quot;gt&amp;quot; table&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dealing-with-the-positive-skewness&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Dealing with the positive skewness&lt;/h1&gt;
&lt;p&gt;The common methods for transforming positively skewed data to normal distribution are, but not limited to, square root transformation, cube root transformation, and log transformation.&lt;/p&gt;
&lt;p&gt;I use the GDP per capita as an example. You can download the data from &lt;a href=&#34;https://data.worldbank.org/indicator/NY.GDP.PCAP.CD&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;toybytjxst&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#toybytjxst .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#toybytjxst .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#toybytjxst .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#toybytjxst .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#toybytjxst .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#toybytjxst .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#toybytjxst .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#toybytjxst .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#toybytjxst .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#toybytjxst .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#toybytjxst .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#toybytjxst .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#toybytjxst .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#toybytjxst .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#toybytjxst .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#toybytjxst .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#toybytjxst .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#toybytjxst .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#toybytjxst .gt_row_group_first td {
  border-top-width: 2px;
}

#toybytjxst .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#toybytjxst .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#toybytjxst .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#toybytjxst .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#toybytjxst .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#toybytjxst .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#toybytjxst .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#toybytjxst .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#toybytjxst .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#toybytjxst .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#toybytjxst .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#toybytjxst .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#toybytjxst .gt_left {
  text-align: left;
}

#toybytjxst .gt_center {
  text-align: center;
}

#toybytjxst .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#toybytjxst .gt_font_normal {
  font-weight: normal;
}

#toybytjxst .gt_font_bold {
  font-weight: bold;
}

#toybytjxst .gt_font_italic {
  font-style: italic;
}

#toybytjxst .gt_super {
  font-size: 65%;
}

#toybytjxst .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#toybytjxst .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#toybytjxst .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#toybytjxst .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#toybytjxst .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#toybytjxst .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Country Name&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Indicator Name&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;502.1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Angola&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2,973.6&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Albania&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;5,352.9&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Andorra&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;40,886.4&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Arab World&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;6,580.1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;United Arab Emirates&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;43,103.3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Argentina&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;10,006.1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;8..214&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;215&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Vietnam&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;2,715.3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;216&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Vanuatu&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;3,058.1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;217&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Samoa&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4,315.9&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;218&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Kosovo&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;4,417.5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;219&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;South Africa&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;6,001.4&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;220&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Zambia&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1,291.3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;221&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Zimbabwe&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;GDP per capita (current US$)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;1,464.0&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;Source: &lt;a href=&#34;https://data.worldbank.org/indicator/NY.GDP.PCAP.CD&#34;&gt;The World Bank&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;Last update: 2020-07-01.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Let’s illustrate the distribution of the above data to see what we are dealing with.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- select(gdp_pc, gdp_pc = value)

ggplot(df, aes(x = gdp_pc)) +
  geom_histogram(aes(y = ..density..), fill = &amp;quot;coral&amp;quot;, color = &amp;quot;gray&amp;quot;, alpha = 0.8) +
  geom_density() +
  theme_bw() + labs(x = NULL, title = &amp;#39;GDP Per Capita&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-methods-for-transforming-data-to-normal-distribution-in-r/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It certainly does not follow the normal distribution and is positively skewed and most of the data points tend to concentrate around the lower values. That is, most countries have a lower GDP per capita.&lt;br /&gt;
The extent of the skewness, however, is not known yet. To measure the skewness you can use &lt;code&gt;skewness()&lt;/code&gt; function from the &lt;strong&gt;moments&lt;/strong&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;skewness(df$gdp_pc)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2.096777&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since the skewness coefficient is greater than one, it denotes the data is highly skewed. Let’s transform the data into normal distribution using different methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Square root transformation: &lt;/strong&gt; The square root transformation involves converting each value to its square root. That is, converting &lt;span class=&#34;math inline&#34;&gt;\({(x)}\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\({({x}^{1/2})}\)&lt;/span&gt;.&lt;br /&gt;
&lt;strong&gt;2) Cube root transformation: &lt;/strong&gt; This method involves converting &lt;span class=&#34;math inline&#34;&gt;\({(x)}\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\({(x^{1/3})}\)&lt;/span&gt;.&lt;br /&gt;
&lt;strong&gt;3) Log transformation: &lt;/strong&gt; Different types of logarithmic transformation can be applied, including &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\({log_{10}x}\)&lt;/span&gt;; &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\({log_{2}x}\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\({log_{e}x}\)&lt;/span&gt; or &lt;span class=&#34;math inline&#34;&gt;\({ln}\ {x}\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% 
  mutate(sqrt_gdp_pc = sqrt(gdp_pc),
         cbrt_gdp_pc = (gdp_pc)^(1/3),
         log_gdp_pc = log(gdp_pc)
         )

do.call(rbind, (lapply(df, skewness))) %&amp;gt;% 
  data.table(keep.rownames = T) %&amp;gt;%
  mutate(Method = factor(case_when(rn %in% &amp;quot;gdp_pc&amp;quot; ~ 1, rn %in% &amp;quot;sqrt_gdp_pc&amp;quot; ~ 2, rn %in% &amp;quot;cbrt_gdp_pc&amp;quot; ~ 3, rn %in% &amp;quot;log_gdp_pc&amp;quot; ~ 4),
                         labels = c(&amp;quot;Original data&amp;quot;, &amp;quot;Square Root Transformation&amp;quot;, &amp;quot;Cube Root Transformation&amp;quot;, &amp;quot;Log Transformation&amp;quot;),
                         ordered = T)) %&amp;gt;% 
  gt() %&amp;gt;% 
  cols_hide(columns = vars(rn)) %&amp;gt;% 
  cols_move_to_start(columns = vars(Method)) %&amp;gt;% 
  # tab_row_group(group = &amp;quot;Methods to reduce skewness&amp;quot;, rows = 2:4) %&amp;gt;% 
  # tab_row_group(group = &amp;quot;Original Dat&amp;quot;, rows = 1) %&amp;gt;% 
  fmt_number(columns = vars(V1),decimals = 3) %&amp;gt;% 
  cols_label(V1 = &amp;quot;Skewness Coefficient&amp;quot;) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 1), locations = cells_body(columns = vars(V1), rows = V1 &amp;gt; 2)) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 0.7), locations = cells_body(columns = vars(V1), rows = V1 &amp;gt; 1 &amp;amp; V1 &amp;lt; 2)) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 0.5), locations = cells_body(columns = vars(V1), rows = V1 &amp;gt; 0.5 &amp;amp; V1 &amp;lt; 1)) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 0.3), locations = cells_body(columns = vars(V1), rows = V1 &amp;lt; 0.5))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;huvbobxmlt&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#huvbobxmlt .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#huvbobxmlt .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#huvbobxmlt .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#huvbobxmlt .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#huvbobxmlt .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#huvbobxmlt .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#huvbobxmlt .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#huvbobxmlt .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#huvbobxmlt .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#huvbobxmlt .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#huvbobxmlt .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#huvbobxmlt .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#huvbobxmlt .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#huvbobxmlt .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#huvbobxmlt .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#huvbobxmlt .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#huvbobxmlt .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#huvbobxmlt .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#huvbobxmlt .gt_row_group_first td {
  border-top-width: 2px;
}

#huvbobxmlt .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#huvbobxmlt .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#huvbobxmlt .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#huvbobxmlt .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#huvbobxmlt .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#huvbobxmlt .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#huvbobxmlt .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#huvbobxmlt .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#huvbobxmlt .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#huvbobxmlt .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#huvbobxmlt .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#huvbobxmlt .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#huvbobxmlt .gt_left {
  text-align: left;
}

#huvbobxmlt .gt_center {
  text-align: center;
}

#huvbobxmlt .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#huvbobxmlt .gt_font_normal {
  font-weight: normal;
}

#huvbobxmlt .gt_font_bold {
  font-weight: bold;
}

#huvbobxmlt .gt_font_italic {
  font-style: italic;
}

#huvbobxmlt .gt_super {
  font-size: 65%;
}

#huvbobxmlt .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#huvbobxmlt .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#huvbobxmlt .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#huvbobxmlt .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#huvbobxmlt .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#huvbobxmlt .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Method&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Skewness Coefficient&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;Original data&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;2.097&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;Square Root Transformation&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;1.092&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;Cube Root Transformation&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;0.737&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;Log Transformation&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;&amp;minus;0.032&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;The square root transformation reduces the skewness coefficient remarkably from &lt;strong&gt;2.1&lt;/strong&gt; to &lt;strong&gt;1.09&lt;/strong&gt;, however, it is still greater than &lt;strong&gt;1&lt;/strong&gt;. It is reduced to &lt;strong&gt;0.74&lt;/strong&gt; by applying the cube root transformation, whereas the log transformation reduces the skewness to &lt;strong&gt;-0.032&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let’s explore more the variability of the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;do.call(cbind, (lapply(df, summary))) %&amp;gt;%
  data.table(keep.rownames = T) %&amp;gt;% 
  gt(rowname_col = &amp;quot;rn&amp;quot;) %&amp;gt;% 
  tab_spanner(label = &amp;quot;Methods to Reduce Skewness&amp;quot;, columns = vars(&amp;quot;sqrt_gdp_pc&amp;quot;, &amp;quot;cbrt_gdp_pc&amp;quot;, &amp;quot;log_gdp_pc&amp;quot;)) %&amp;gt;% 
  tab_spanner(label = &amp;quot;Original Data&amp;quot;, columns = vars(&amp;quot;gdp_pc&amp;quot;)) %&amp;gt;% 
  fmt_number(columns = ends_with(&amp;quot;gdp_pc&amp;quot;), decimals = 3) %&amp;gt;% 
  cols_label(gdp_pc = &amp;quot;GDP per capita&amp;quot;, sqrt_gdp_pc = &amp;quot;Square root transformation&amp;quot;, cbrt_gdp_pc = &amp;quot;Cube root transformaiton&amp;quot;, log_gdp_pc = &amp;quot;Log transformation&amp;quot;) %&amp;gt;%
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 1), locations = cells_body(columns = vars(gdp_pc))) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 0.7), locations = cells_body(columns = vars(sqrt_gdp_pc))) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 0.5), locations = cells_body(columns = vars(cbrt_gdp_pc))) %&amp;gt;% 
  tab_style(style = cell_fill(color = &amp;quot;maroon&amp;quot;, alpha = 0.3), locations = cells_body(columns = vars(log_gdp_pc)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `columns = vars(...)` has been deprecated in gt 0.3.0:
## * please use `columns = c(...)` instead

## Warning: `columns = vars(...)` has been deprecated in gt 0.3.0:
## * please use `columns = c(...)` instead

## Warning: `columns = vars(...)` has been deprecated in gt 0.3.0:
## * please use `columns = c(...)` instead

## Warning: `columns = vars(...)` has been deprecated in gt 0.3.0:
## * please use `columns = c(...)` instead

## Warning: `columns = vars(...)` has been deprecated in gt 0.3.0:
## * please use `columns = c(...)` instead

## Warning: `columns = vars(...)` has been deprecated in gt 0.3.0:
## * please use `columns = c(...)` instead&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;tfyuvvwwyq&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#tfyuvvwwyq .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#tfyuvvwwyq .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#tfyuvvwwyq .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#tfyuvvwwyq .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#tfyuvvwwyq .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tfyuvvwwyq .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#tfyuvvwwyq .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#tfyuvvwwyq .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#tfyuvvwwyq .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#tfyuvvwwyq .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#tfyuvvwwyq .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#tfyuvvwwyq .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#tfyuvvwwyq .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#tfyuvvwwyq .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#tfyuvvwwyq .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#tfyuvvwwyq .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#tfyuvvwwyq .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#tfyuvvwwyq .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#tfyuvvwwyq .gt_row_group_first td {
  border-top-width: 2px;
}

#tfyuvvwwyq .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#tfyuvvwwyq .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#tfyuvvwwyq .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#tfyuvvwwyq .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tfyuvvwwyq .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#tfyuvvwwyq .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#tfyuvvwwyq .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#tfyuvvwwyq .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tfyuvvwwyq .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#tfyuvvwwyq .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#tfyuvvwwyq .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#tfyuvvwwyq .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#tfyuvvwwyq .gt_left {
  text-align: left;
}

#tfyuvvwwyq .gt_center {
  text-align: center;
}

#tfyuvvwwyq .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#tfyuvvwwyq .gt_font_normal {
  font-weight: normal;
}

#tfyuvvwwyq .gt_font_bold {
  font-weight: bold;
}

#tfyuvvwwyq .gt_font_italic {
  font-style: italic;
}

#tfyuvvwwyq .gt_super {
  font-size: 65%;
}

#tfyuvvwwyq .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#tfyuvvwwyq .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#tfyuvvwwyq .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#tfyuvvwwyq .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#tfyuvvwwyq .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#tfyuvvwwyq .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;2&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_center gt_columns_top_border gt_column_spanner_outer&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;
        &lt;span class=&#34;gt_column_spanner&#34;&gt;Original Data&lt;/span&gt;
      &lt;/th&gt;
      &lt;th class=&#34;gt_center gt_columns_top_border gt_column_spanner_outer&#34; rowspan=&#34;1&#34; colspan=&#34;3&#34;&gt;
        &lt;span class=&#34;gt_column_spanner&#34;&gt;Methods to Reduce Skewness&lt;/span&gt;
      &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;GDP per capita&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Square root transformation&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Cube root transformaiton&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Log transformation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34;&gt;Min.&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;261.247&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;16.163&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;6.393&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;5.565&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34;&gt;1st Qu.&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;1,994.906&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;44.664&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;12.589&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;7.598&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34;&gt;Median&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;6,564.920&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;81.024&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;18.724&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;8.789&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34;&gt;Mean&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;14,536.951&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;99.495&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;20.439&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;8.738&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34;&gt;3rd Qu.&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;17,401.722&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;131.916&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;25.914&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;9.764&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34;&gt;Max.&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060;&#34;&gt;114,704.594&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7);&#34;&gt;338.681&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5);&#34;&gt;48.588&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3);&#34;&gt;11.650&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;In the original data, the distance between the 1st quartile and the minimum value is 1733.7 and the distance between the 3rd quartile and the maximum value is 97302.9 prior to any kind of transformations. Nevertheless, it decreases at different levels after applying various forms of transformation. For instance, the difference between the 3rd quartile and the maximum value is 206.8 after the square root transformation, it is 22.7 after the cube root transformation, and it is 1.9 after the log transformation.&lt;/p&gt;
&lt;p&gt;Another point of consideration is the distance between the mean and the median. The mean is 7972.03 points away from the median in the original data, whereas it is 18.5 after the square root transformation, 1.71 after the cube root transformation, and -0.05 after the log transformation.&lt;/p&gt;
&lt;p&gt;Let’s make a quick visualization to better understand the shape of the distribution after applying each kind of above-mentioned methods.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% 
  pivot_longer(cols = everything(), names_to = &amp;quot;method&amp;quot;, values_to = &amp;quot;values&amp;quot;) %&amp;gt;% 
  mutate(method = factor(case_when(method == &amp;quot;gdp_pc&amp;quot; ~ 1, method == &amp;quot;sqrt_gdp_pc&amp;quot; ~ 2, method == &amp;quot;cbrt_gdp_pc&amp;quot; ~ 3, method == &amp;quot;log_gdp_pc&amp;quot; ~ 4),
                          labels = c(&amp;quot;Original data&amp;quot;, &amp;quot;Square root transformation&amp;quot;, &amp;quot;Cube root transformation&amp;quot;, &amp;quot;Log transformation&amp;quot;)))

vline &amp;lt;- summarise(group_by(df, method), mean = mean(values), median = median(values))

df %&amp;gt;% 
  ggplot(aes(x = values)) +
  geom_histogram(aes(y = ..density..), fill = &amp;quot;coral&amp;quot;, alpha = 0.8, color = &amp;quot;gray&amp;quot;) +
  geom_density() + theme_bw() +
  facet_wrap(~method, nrow = 2, scales = &amp;quot;free&amp;quot;) +
  geom_vline(data = vline, aes(xintercept = mean), linetype = &amp;quot;dotted&amp;quot;) +
  geom_vline(data = vline, aes(xintercept = median), linetype = &amp;quot;dashed&amp;quot;) +
  labs(x = NULL, caption = &amp;quot;Mean = Dotted line\nMedian = Dashed line&amp;quot;) +
  theme(strip.text = element_text(size = 15, face = &amp;quot;bold&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-methods-for-transforming-data-to-normal-distribution-in-r/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As the above plots depict, the log transformation is pretty awesome. It reduces the skewness and improves the normality of the data more rapidly compared to the cube root or square root transformation.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dealing-with-the-negative-skewness&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Dealing with the negative skewness&lt;/h1&gt;
&lt;p&gt;The important caveat in applying the above methods to reduce the skewness is the data should be skewed to the right side, otherwise those methods do not transform the distribution of the data to normal.&lt;/p&gt;
&lt;p&gt;Let’s use the life expectancy data from the World Bank as an example. You can download the data from &lt;a href=&#34;https://data.worldbank.org/indicator/SP.DYN.LE00.IN&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;qzghdmrtjl&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#qzghdmrtjl .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qzghdmrtjl .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qzghdmrtjl .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qzghdmrtjl .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qzghdmrtjl .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qzghdmrtjl .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qzghdmrtjl .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qzghdmrtjl .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qzghdmrtjl .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qzghdmrtjl .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qzghdmrtjl .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qzghdmrtjl .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#qzghdmrtjl .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qzghdmrtjl .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#qzghdmrtjl .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#qzghdmrtjl .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qzghdmrtjl .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#qzghdmrtjl .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#qzghdmrtjl .gt_row_group_first td {
  border-top-width: 2px;
}

#qzghdmrtjl .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qzghdmrtjl .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#qzghdmrtjl .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#qzghdmrtjl .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qzghdmrtjl .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qzghdmrtjl .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qzghdmrtjl .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qzghdmrtjl .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qzghdmrtjl .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qzghdmrtjl .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qzghdmrtjl .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qzghdmrtjl .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qzghdmrtjl .gt_left {
  text-align: left;
}

#qzghdmrtjl .gt_center {
  text-align: center;
}

#qzghdmrtjl .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qzghdmrtjl .gt_font_normal {
  font-weight: normal;
}

#qzghdmrtjl .gt_font_bold {
  font-weight: bold;
}

#qzghdmrtjl .gt_font_italic {
  font-style: italic;
}

#qzghdmrtjl .gt_super {
  font-size: 65%;
}

#qzghdmrtjl .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#qzghdmrtjl .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#qzghdmrtjl .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#qzghdmrtjl .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#qzghdmrtjl .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#qzghdmrtjl .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Country Name&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Indicator Name&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Aruba&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;76.2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Afghanistan&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;64.5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Angola&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;60.8&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Albania&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;78.5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Arab World&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;71.8&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;United Arab Emirates&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;77.8&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Argentina&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;76.5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier; font-size: x-small; background-color: #E4E4E4;&#34;&gt;8..236&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #E4E4E4;&#34;&gt;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;237&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Vanuatu&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;70.3&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;238&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Samoa&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;73.2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;239&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Kosovo&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;72.2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;240&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Yemen, Rep.&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;66.1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;241&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;South Africa&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;63.9&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;242&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Zambia&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;63.5&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right gt_stub&#34; style=&#34;font-family: Courier;&#34;&gt;243&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Zimbabwe&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34;&gt;Life expectancy at birth, total (years)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_right&#34;&gt;61.2&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;Source: &lt;a href=&#34;https://data.worldbank.org/indicator/SP.DYN.LE00.IN&#34;&gt;The World Bank&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_sourcenote&#34; colspan=&#34;4&#34;&gt;Last update: 2020-07-01.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Below is the distribution of the above data which is moderately skewed to the left side with a skewness coefficient of -0.532.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- select(life_exp, life_exp = value)

ggplot(df, aes(x = life_exp)) +
  geom_histogram(aes(y = ..density..), fill = &amp;quot;coral&amp;quot;, color = &amp;quot;gray&amp;quot;, alpha = 0.8) +
  geom_density() +
  theme_bw() + labs(x = NULL, title = &amp;#39;Life expectancy&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-methods-for-transforming-data-to-normal-distribution-in-r/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;One solution when dealing with the negatively skewed data is to reflect the values and apply the methods that are used to reduce the positive skewness on the reflected values. That is, subtract each value from a constant which is larger than the maximum value prior to transformation. The highest value in the above data is 84.9. Thus, I subtract each value from 86.&lt;/p&gt;
&lt;p&gt;The point to notice after reflecting the data is that the extent of the skewness remains the same and the distribution of the data is as skewed as it was, though in the opposite direction.&lt;/p&gt;
&lt;p&gt;Let’s apply the above methods to the reflected data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- df %&amp;gt;% 
  mutate(reflected_life_exp = 86-life_exp,
         sqrt_reflected_life_exp = sqrt(reflected_life_exp),
         cbrt_reflected_life_exp = (reflected_life_exp)^(1/3),
         log_reflected_life_exp = log(reflected_life_exp),
         life_exp = NULL) %&amp;gt;% 
  pivot_longer(cols = everything(), names_to = &amp;quot;method&amp;quot;, values_to = &amp;quot;values&amp;quot;) %&amp;gt;% 
  mutate(method = factor(case_when(method == &amp;quot;reflected_life_exp&amp;quot; ~ 1, method == &amp;quot;sqrt_reflected_life_exp&amp;quot; ~ 2, method == &amp;quot;cbrt_reflected_life_exp&amp;quot; ~ 3, method == &amp;quot;log_reflected_life_exp&amp;quot; ~ 4),
                          labels = c(&amp;quot;Reflected data&amp;quot;, &amp;quot;Square root transformation&amp;quot;, &amp;quot;Cube root transformation&amp;quot;, &amp;quot;Log transformation&amp;quot;)))

vline &amp;lt;- summarise(group_by(df, method), mean = mean(values), median = median(values))

df %&amp;gt;% 
  ggplot(aes(x = values)) +
  geom_histogram(aes(y = ..density..), fill = &amp;quot;coral&amp;quot;, alpha = 0.8, color = &amp;quot;gray&amp;quot;) +
  geom_density() + theme_bw() +
  facet_wrap(~method, nrow = 2, scales = &amp;quot;free&amp;quot;) +
  geom_vline(data = vline, aes(xintercept = mean), linetype = &amp;quot;dotted&amp;quot;) +
  geom_vline(data = vline, aes(xintercept = median), linetype = &amp;quot;dashed&amp;quot;) +
  labs(x = NULL, caption = &amp;quot;Mean = Dotted line\nMedian = Dashed line&amp;quot;) +
  theme(strip.text = element_text(size = 15, face = &amp;quot;bold&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-methods-for-transforming-data-to-normal-distribution-in-r/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Surprisingly, the square root and cube root transformation convert the distribution of the above data closer to the normal distribution compare to log transformation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The important point to consider is that the values have been reflected. That is, the lower values represent high values and the higher values represent low values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other approaches to dealing with the negative skewness can be the inverse of the transformations that are used to reduce the positive skewness. For example, instead of computing square root convert &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\(x^2\)&lt;/span&gt; and instead of cube root convert &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\(x^{3}\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Different approaches reduce the extent of the skewness and boost the validity of the statistical inferences at different levels. Whatever method you use to transform the data into a normal distribution, the points you have to consider are &lt;strong&gt;a)&lt;/strong&gt; never limit yourself to one standard method and examine several options before deciding which approach to use &lt;strong&gt;b)&lt;/strong&gt; be cautious and always explore the math behind each approach. For example, let’s have a glance at the below graphs that illustrate the domain of log, square root, and cube root functions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot &amp;lt;- ggplot(data.frame(x = c(-25,25)), aes(x = x)) +
  theme_bw() + geom_vline(xintercept = 0) + geom_hline(yintercept = 0)

sqrt &amp;lt;- plot + stat_function(fun = function(x){sqrt(x)}, color = &amp;#39;maroon&amp;#39;) + labs(title = &amp;quot;Square root&amp;quot;)
cbrt &amp;lt;- plot + stat_function(fun = function(x){sign(x) * abs((x))^(1/3)}, color = &amp;#39;maroon&amp;#39;) + labs(title = &amp;quot;Cube root&amp;quot;)  + xlim(c(-50, 50))
log &amp;lt;- plot + stat_function(fun = function(x){log10(x)}, color = &amp;#39;maroon&amp;#39;) + labs(title = &amp;quot;Log&amp;quot;)

(log | sqrt) / (cbrt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-30-methods-for-transforming-data-to-normal-distribution-in-r/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Since the domain for log is strictly greater than zero, it is reasonable to use log+1 instead of log transformation if the data have meaningful zero values. Furthermore, the square root is not defined for the negative numbers, thus you can consider adding a constant to convert the negative values to positive values prior to transformation or use cube root transformation instead of square root transformation. The kind of data you are working with, therefore, is literally foundational in deciding which method to use.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Skewness | Definition and its Importance in Data Science</title>
      <link>/post/skewness-definition-and-its-importance-in-data-science/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/skewness-definition-and-its-importance-in-data-science/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what-is-skewness&#34;&gt;What is Skewness?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calculating-skewness-using-r-and-by-hand&#34;&gt;Calculating Skewness using R and by Hand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#importance-of-skewness-in-data-science&#34;&gt;Importance of Skewness in Data Science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;what-is-skewness&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What is Skewness?&lt;/h1&gt;
&lt;p&gt;Skewness is an important statistical concept in the field of data analytics that every statistician and data scientist needs to know. As you are reading this post, I am sure you will understand the concept of skewness and why it is important in data analytics by the end of this post.&lt;/p&gt;
&lt;p&gt;Skewness is a measure of the asymmetry of the probability distribution. In other words, skewness is a measure to describe the deviation of the distribution of the data from a normal distribution. Have a glance at the below graphs for comparing normal distribution with the skewed distribution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-17-skewness-definition-and-its-importance-in-data-science/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As the above plots depict, the normal distribution is symmetrical on both sides and the data points tend to fall at the center of the distribution. Whereas the positively skewed distribution has its long tail on the right side and most of the data points are concentrated around the lower values, and the distribution with its long tail on the left side is a negatively skewed distribution which most of its data points are concentrated around the higher values.&lt;/p&gt;
&lt;p&gt;Another aspect of the normal distribution is that all measures of the central tendency &lt;strong&gt;&lt;a href=&#34;https://fahimahmad.netlify.app/post/measures-of-central-tendency-using-r/&#34;&gt;(click here to read more about the measures of central tendency)&lt;/a&gt;&lt;/strong&gt; are equal and lie in one point &lt;em&gt;(mean = mode = median)&lt;/em&gt;. While in the skewed distributions, the mean is pulled out toward the longer tail. Therefore, in the positively skewed distribution, the mean is larger than the median and mode &lt;em&gt;(mean &amp;gt; median &amp;gt; mode)&lt;/em&gt; and the opposite is the case in a negatively skewed distribution &lt;em&gt;(mean &amp;lt; median &amp;lt; mode)&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;calculating-skewness-using-r-and-by-hand&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Calculating Skewness using R and by Hand&lt;/h1&gt;
&lt;p&gt;Skewness can be quantified to represent the extent of variation of a distribution from the normal distribution. A normal distribution has a skew of zero and is used as a reference for determining the level of skewness. When the skewness is greater than zero it shows a positively skewed distribution, whereas a negatively skewed distribution has a skewness of lower than zero.&lt;/p&gt;
&lt;p&gt;When is the skewness too much? As a rule of thumb, the data with the skewness between -0.5 to 0.5 is assumed to be fairly symmetrical and if the skewness is greater than 1 or lower than -1, it denotes highly skewed distribution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-17-skewness-definition-and-its-importance-in-data-science/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Skewness is defined as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{ Skewness = \frac{∑_{i=1}^{n} \ ((x_i - \bar{x})^3/n)}{(∑_{i=1}^{n} \ ((x_i - \bar{x})^2/n))^{(3/2)}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(X_i\)&lt;/span&gt; is the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; value of &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\bar{X}\)&lt;/span&gt; is the mean, and &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; is the sample size.&lt;/p&gt;
&lt;p&gt;In R, the &lt;code&gt;skewness()&lt;/code&gt; function from the &lt;strong&gt;moments&lt;/strong&gt; package can be used to compute the skewness of a given data.&lt;/p&gt;
&lt;p&gt;For example, let’s compute the skewness of below data using the &lt;code&gt;skewness()&lt;/code&gt; function and the aforementioned formula to confirm the consistent results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(df &amp;lt;- data.frame(x = c(400, 300, 180, 360, 490, 400, 280, 290, 180, 110, 120, 270)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      x
## 1  400
## 2  300
## 3  180
## 4  360
## 5  490
## 6  400
## 7  280
## 8  290
## 9  180
## 10 110
## 11 120
## 12 270&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(moments)

df %&amp;gt;% 
  summarise(skewness_builtin = skewness(x),
            skewness_by_hand = sum((x - mean(x))^3/nrow(.))/sum((x - mean(x))^2/nrow(.))^(3/2)
            )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   skewness_builtin skewness_by_hand
## 1       0.08316773       0.08316773&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;importance-of-skewness-in-data-science&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Importance of Skewness in Data Science&lt;/h1&gt;
&lt;p&gt;Skewness is an important statistical concept for, at least, three reasons. &lt;strong&gt;a)&lt;/strong&gt; Many statistical models and inferences require that the distribution of the data should be normal, while the real-world data rarely follow a normal distribution. Therefore, skewness as a measure of asymmetric is essential to know the shape of the distribution of the data; &lt;strong&gt;b)&lt;/strong&gt; skewness tells us about the direction of outliers. The positive skewness is the sign of the presence of larger extreme values and the negative skewness indicates the presence lower extreme values; &lt;strong&gt;c)&lt;/strong&gt; skewness shows the location of the data points. That is, it denotes where most of the values are concentrated.&lt;/p&gt;
&lt;p&gt;For instance, below graph depicts the density plot of GDP per capita which is skewed on the right side and the mean is more than two times higher than the median.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-17-skewness-definition-and-its-importance-in-data-science/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In other words, most countries have a lower GDP per capita. That is, if you use this data to predict, for example, life expectancy, it can predict the life expectancy of those countries with the lower GDP per capita more accurately compare to predicting the life expectancy of the countries with the higher GDP per capita.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Analysis of the Relationship Between Two Quantitative Variables | Correlation</title>
      <link>/post/analysis-of-the-relationship-between-two-quantitative-variables-in-r-correlation/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/analysis-of-the-relationship-between-two-quantitative-variables-in-r-correlation/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pearson-correlation&#34;&gt;Pearson Correlation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#spearman-rank-correlation&#34;&gt;Spearman Rank Correlation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interpreting-the-correlation-coefficient&#34;&gt;Interpreting the Correlation Coefficient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#computing-correlation-coefficient-in-r&#34;&gt;Computing Correlation Coefficient in R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In recent posts, we discussed &lt;a href=&#34;https://fahimahmad.netlify.app/post/measures-of-central-tendency-using-r/&#34;&gt;measures of central tendency&lt;/a&gt; and &lt;a href=&#34;https://fahimahmad.netlify.app/post/measures-of-dispersion-using-r/&#34;&gt;measures of dispersion&lt;/a&gt;. But hey, that is the start of a long journey. Finding relationships between variables is more interesting than describing the distribution of the data.&lt;/p&gt;
&lt;p&gt;While studying, for example, the relationship between GDP and life expectancy, you might be interested to know whether there exists any relationship between the two indicators? is it a positive relationship or a negative relationship? and how strong the association is?&lt;/p&gt;
&lt;p&gt;The above questions can be answered by computing the correlation coefficient between the two indicators. Depending on the type of data, different methods of correlation exist. In this post, you will learn the Pearson correlation coefficient and the Spearman correlation coefficient.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pearson-correlation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Pearson Correlation&lt;/h1&gt;
&lt;p&gt;Pearson correlation is a parametric correlation test that measures the strength and direction of a &lt;strong&gt;linear relationship&lt;/strong&gt; between two variables. This method is by far the most used and best method for calculating the association between variables that follow a &lt;strong&gt;normal distribution&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If the two variables are denoted by &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, the Pearson correlation coefficient is defined as the ratio of covariance between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; to the product of standard deviation of &lt;code&gt;x&lt;/code&gt; and standard deviation of &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[r =  (Covariance (x,y)) \space/\space (S.D.(x)×S.D.(y))\]&lt;/span&gt;
Where,&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{Covariance(x,y) = \frac{∑^n_{i=1}(x_i-\bar{x})(y_i-\bar{y})}{\ {n-1}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{S.D.(x) = \sqrt\frac{∑^n_{i=1}(x_i-\bar{x})^2}{\ {n-1}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{S.D.(y) = \sqrt\frac{∑^n_{i=1}(y_i-\bar{y})^2}{\ {n-1}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spearman-rank-correlation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Spearman Rank Correlation&lt;/h1&gt;
&lt;p&gt;While the Pearson correlation is used to compute the degree of relationship between linearly related variables, the Spearman correlation indicates the monotonic relationship. The Pearson correlation is more appropriate for continuous data such as income, age, and height, while Spearman is more appropriate for ordinal data such as level of satisfaction, or level of happiness measured on a scale of 1 to 4.&lt;/p&gt;
&lt;p&gt;In other words, the Pearson correlation is used to compute the extent of association when there is an equal interval between the adjacent units of the input variables. For instance, an increase in income from 100 to 101 is equal to the increase from 500 to 501 or an increase in age from 18 to 19 is same as an increase in 38 to 39, while the Spearman correlation is widely used with the ordinal data such that one level can be considered higher or lower than another level, but the magnitude of the difference is not necessarily known or the same. For instance, “Strong satisfaction” is higher than the “Somewhat satisfaction” and “Somewhat dissatisfaction” is higher than “Strong dissatisfaction”. However, it can not be quantified how much higher/lower is one level compared to the other level.&lt;/p&gt;
&lt;p&gt;Moreover, since the Spearman correlation is based on the ranked values rather than the raw data and does not carry any assumption about the distribution of the data points, it can be used to measure the association between two continuous variables as well when the data are not distributed normally.&lt;/p&gt;
&lt;p&gt;The Spearman ranked correlation can be expressed as follow:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[rho =  (Covariance (x&amp;#39;,y&amp;#39;)) \space/\space (S.D.(x&amp;#39;)×S.D.(y&amp;#39;))\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(x&amp;#39;\)&lt;/span&gt; is rank(x) and &lt;span class=&#34;math inline&#34;&gt;\(y&amp;#39;\)&lt;/span&gt; is rank(y).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interpreting-the-correlation-coefficient&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Interpreting the Correlation Coefficient&lt;/h1&gt;
&lt;p&gt;The correlation coefficient always lies between -1 and +1 and can’t go outside of this range. Where the sign of the correlation coefficient denotes the direction of the relationship between two variables and the absolute value of the correlation coefficient indicates the strength of association between two variables. A &lt;code&gt;+&lt;/code&gt; sign indicates the positive relationship and a &lt;code&gt;-&lt;/code&gt; sign indicates the negative relationship. Furthermore, the closer the correlation coefficient to -1 or +1, the stronger the relationship, and as it goes toward 0 the relationship will be weaker.&lt;/p&gt;
&lt;p&gt;How close is close enough to -1 or +1? I get too excited to see correlations beyond ±0.7.
You can refer to below table while interpreting the correlation coefficient:&lt;/p&gt;
&lt;div id=&#34;afvpaeqnbm&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#afvpaeqnbm .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#afvpaeqnbm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#afvpaeqnbm .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#afvpaeqnbm .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#afvpaeqnbm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#afvpaeqnbm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#afvpaeqnbm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#afvpaeqnbm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#afvpaeqnbm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#afvpaeqnbm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#afvpaeqnbm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#afvpaeqnbm .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#afvpaeqnbm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#afvpaeqnbm .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#afvpaeqnbm .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#afvpaeqnbm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#afvpaeqnbm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#afvpaeqnbm .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#afvpaeqnbm .gt_row_group_first td {
  border-top-width: 2px;
}

#afvpaeqnbm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#afvpaeqnbm .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#afvpaeqnbm .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#afvpaeqnbm .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#afvpaeqnbm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#afvpaeqnbm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#afvpaeqnbm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#afvpaeqnbm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#afvpaeqnbm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#afvpaeqnbm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#afvpaeqnbm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#afvpaeqnbm .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#afvpaeqnbm .gt_left {
  text-align: left;
}

#afvpaeqnbm .gt_center {
  text-align: center;
}

#afvpaeqnbm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#afvpaeqnbm .gt_font_normal {
  font-weight: normal;
}

#afvpaeqnbm .gt_font_bold {
  font-weight: bold;
}

#afvpaeqnbm .gt_font_italic {
  font-style: italic;
}

#afvpaeqnbm .gt_super {
  font-size: 65%;
}

#afvpaeqnbm .gt_two_val_uncert {
  display: inline-block;
  line-height: 1em;
  text-align: right;
  font-size: 60%;
  vertical-align: -0.25em;
  margin-left: 0.1em;
}

#afvpaeqnbm .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#afvpaeqnbm .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#afvpaeqnbm .gt_slash_mark {
  font-size: 0.7em;
  line-height: 0.7em;
  vertical-align: 0.15em;
}

#afvpaeqnbm .gt_fraction_numerator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: 0.45em;
}

#afvpaeqnbm .gt_fraction_denominator {
  font-size: 0.6em;
  line-height: 0.6em;
  vertical-align: -0.05em;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;2&#34; class=&#34;gt_heading gt_title gt_font_normal gt_bottom_border&#34; style&gt;Interpreting the Correlation Coefficient&lt;/th&gt;
    &lt;/tr&gt;
    
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_right&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;background-color: #BEBEBE; color: #FFFFFF; text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Correlation coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;background-color: #BEBEBE; color: #FFFFFF; text-align: center; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Meaning&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060; color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;-1.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #B03060; color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Perfect negative relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;-0.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.7); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Strong negative relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;-0.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.5); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Moderate negative relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;-0.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.3); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Weak negative relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.1); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;0.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.1); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;No relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.3); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;0.3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.3); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Weak positive relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.5); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;0.5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.5); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Moderate positive relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: rgba(176,48,96,0.7); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;0.7&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: rgba(176,48,96,0.7); color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Strong positive relationship&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_right&#34; style=&#34;background-color: #B03060; color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;1.0&lt;/td&gt;
&lt;td class=&#34;gt_row gt_left&#34; style=&#34;background-color: #B03060; color: #000000; text-align: left; border-left-width: 1px; border-left-style: solid; border-left-color: #000000; border-right-width: 1px; border-right-style: solid; border-right-color: #000000; border-top-width: 1px; border-top-style: solid; border-top-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: #000000;&#34;&gt;Perfect positive relationship&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;computing-correlation-coefficient-in-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Computing Correlation Coefficient in R&lt;/h1&gt;
&lt;p&gt;In the example below, we have a table of time series data of global GDP per capita and life expectancy from 1960 to 2018. Let’s find if if a higher GDP per capita can predict a higher life expectancy, and to what extent both indicators are correlated to each other.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;year&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;life_exp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gdp_pc&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1960&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;52.57821&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;452.1089&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.07938&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;464.0490&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1962&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.49664&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;489.5471&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1963&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;54.02187&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;516.6151&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1964&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;54.69176&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;554.5533&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1965&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55.35094&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;591.7181&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1966&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.08243&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;628.7388&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1967&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.78712&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;655.8735&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1968&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57.38625&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;693.9011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1969&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57.99542&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;749.7251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1970&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;58.58291&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;803.9466&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1971&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59.11015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;870.4373&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1972&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59.59617&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;984.5294&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1973&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.04475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1178.0889&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1974&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.54026&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1332.8028&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1975&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.98629&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1457.1544&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1976&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61.40832&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1556.8154&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1977&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61.83214&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1729.5263&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1978&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62.19287&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2005.1087&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1979&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62.55490&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2288.6660&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1980&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62.84117&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2532.7632&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1981&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63.18203&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2576.6880&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1982&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63.50846&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2507.3214&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1983&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63.75660&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2513.1282&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1984&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64.02116&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2560.9983&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1985&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64.27871&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2643.7584&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1986&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64.57943&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3069.9131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1987&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64.83061&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3431.5807&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1988&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.03467&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3772.4014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1989&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.24723&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3870.4130&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1990&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.43349&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4285.2353&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1991&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.61949&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4464.6543&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.77051&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4668.2405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1993&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.88757&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4669.5816&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1994&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.08953&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4939.8349&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1995&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.27814&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5412.3441&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1996&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.55982&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5453.3128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1997&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.84463&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5357.0692&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1998&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;67.08683&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5272.6333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1999&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;67.29315&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5395.9428&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;67.54925&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5498.3297&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2001&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;67.82180&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5396.8919&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68.07043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5533.4253&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2003&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68.32699&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6131.2232&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68.65235&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6820.6152&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2005&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68.92032&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7297.1534&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;69.26243&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7811.9362&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;69.59208&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8694.9003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;69.89930&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9423.7573&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70.24658&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8830.3069&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70.55621&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9551.3357&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2011&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70.88413&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10488.3340&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2012&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71.17172&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10605.2083&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71.46224&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10781.8553&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71.74238&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10952.3444&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71.94752&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10246.5074&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2016&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72.18048&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10281.9088&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72.38530&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10817.4819&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72.56006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11381.6806&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2019&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11435.6099&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;First thing first, let’s plot the data points to explore if there exists any relationship between the two indicators or not, and if the data points vary together. This is done through a scatter-plot. Please read this post for more details: &lt;a href=&#34;https://fahimahmad.netlify.app/post/exploring-relationship-between-variables-scatter-plot/&#34;&gt;Exploring Relationship Between Variables | scatter-plot&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
df %&amp;gt;% 
  ggplot(aes(x = gdp_pc, y = life_exp)) +
  geom_point() +
  theme_bw() +
  labs(title = &amp;quot;GDP per capita and life expectancy, 1960-2018&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-26-analysis-of-the-relationship-between-two-quantitative-variables-in-r-correlation/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Since the points are moving from the lower-left corner to the upper-right corner. Thus, a positive relationship exists&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. However, it does not indicate the extent of the relationship between the variables.&lt;/p&gt;
&lt;p&gt;Next, the normality test should be performed to check whether the data follow a normal distribution or not. This can be tested visually through &lt;strong&gt;qq-plot&lt;/strong&gt; or &lt;strong&gt;histogram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;qq1 &amp;lt;- df %&amp;gt;% ggplot(aes(sample = life_exp)) +
  geom_qq() + labs(y = &amp;quot;life expectancy&amp;quot;)

qq2 &amp;lt;- df %&amp;gt;% ggplot(aes(sample = gdp_pc)) +
  geom_qq() + labs(y = &amp;quot;GDP per capita&amp;quot;)

hist1 &amp;lt;- df %&amp;gt;% ggplot(aes(x = life_exp)) +
  geom_histogram(fill = &amp;quot;orange&amp;quot;, alpha = 0.5) + labs(x = &amp;quot;life expectancy&amp;quot;)

hist2 &amp;lt;- df %&amp;gt;% ggplot(aes(x = gdp_pc)) +
  geom_histogram(fill = &amp;quot;orange&amp;quot;, alpha = 0.5) + labs(x = &amp;quot;GDP per capita&amp;quot;)

library(patchwork)
(qq1 | qq2) / (hist1 / hist2) &amp;amp;
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 rows containing non-finite values (stat_qq).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1 rows containing non-finite values (stat_bin).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-26-analysis-of-the-relationship-between-two-quantitative-variables-in-r-correlation/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;From the above plots it can easily be drawn that the data points do not follow a normal distribution, but the more precise way to check the normality of distribution is to use a statistical test. The &lt;code&gt;shapiro.test()&lt;/code&gt; function performs the Shapiro-Wilk test of normality.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;shapiro.test(df$gdp_pc)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
    Shapiro-Wilk normality test

data:  df$gdp_pc
W = 0.89361, p-value = 7.756e-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;shapiro.test(df$life_exp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
    Shapiro-Wilk normality test

data:  df$life_exp
W = 0.9538, p-value = 0.02537&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The null hypothesis in the Shapiro-Wilk test is that the data are normally distributed. Therefore, a p-value of less than the significance level, or less than 0.05 indicates the data points are not normally distributed.&lt;/p&gt;
&lt;p&gt;After testing the assumptions, you can decide to choose either Pearson or Spearman correlation. The &lt;code&gt;cor.test()&lt;/code&gt; function can be used for evaluating the association between variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor.test(df$gdp_pc, df$life_exp, method = &amp;quot;pearson&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
    Pearson&amp;#39;s product-moment correlation

data:  df$gdp_pc and df$life_exp
t = 18.088, df = 57, p-value &amp;lt; 2.2e-16
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 0.8730810 0.9535685
sample estimates:
      cor 
0.9228352 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor.test(df$gdp_pc, df$life_exp, method = &amp;quot;spearman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
    Spearman&amp;#39;s rank correlation rho

data:  df$gdp_pc and df$life_exp
S = 134, p-value &amp;lt; 2.2e-16
alternative hypothesis: true rho is not equal to 0
sample estimates:
      rho 
0.9960842 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As shown above, both Pearson and Spearman’s correlation coefficient is above 0.9 which indicates a strong correlation between the two indicators. In other words, as GDP per capita increases life expectancy increases as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;If there exists a positive correlation, the points will be moving from the lower-left to the upper-right corner. Similarly, if there is a negative correlation, the points will be moving down from the upper-left corner to the lower right corner. In case the points are scattered and do not form any pattern, it depicts that no relationship exists between the variables.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Measures of Dispersion</title>
      <link>/post/measures-of-dispersion-using-r/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/measures-of-dispersion-using-r/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#absolute-measures-of-dispersion&#34;&gt;Absolute measures of dispersion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#relative-measures-of-dispersion&#34;&gt;Relative measures of dispersion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the previous post I described the measures of central tendency. But the central tendency is not the only thing you can tell interesting facts about the data and is not the only way by which you can get to know about the concentration of the data. In this post, you will learn about the measures of dispersion as part of the descriptive statistics.&lt;/p&gt;
&lt;p&gt;As the name suggests, the measures of dispersion show the extent of variability and the scattering of the data points. The main idea of the measures of dispersion is to get to know how the data are spread and how much the data points vary from the average value.&lt;/p&gt;
&lt;p&gt;Two distinct sets of data may have the same central value, but a completely different level of variation. Therefore, an adequate description of the data should include both of these characteristics. In other words, the combination of measures of the central tendency and measures of dispersion help to understand the distribution of the data.&lt;/p&gt;
&lt;p&gt;A measure of dispersion is zero if all the data points are the same and increases as the data become more diverse. There are mainly two types of measures of dispersion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Absolute measures of dispersion&lt;/li&gt;
&lt;li&gt;Relative measures of dispersion&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;absolute-measures-of-dispersion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Absolute measures of dispersion&lt;/h2&gt;
&lt;p&gt;Absolute measures of dispersion express the scattering of the data points in terms of distance such as range or in terms of deviation from the central value such as variance and standard deviation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Range:&lt;/strong&gt; Range is defined as the difference between the smallest and the largest value in a set of data. The range is easy to compute; however, it is influenced by extreme values. Therefore, it is not a reliable measure of dispersion.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Range = X_{max} - X_{min}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quartile deviation:&lt;/strong&gt; Quartile deviation is defined as half of the distance between the first and third quartile&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. Quartile deviation is not influenced by extreme values. However, its demerit is that it ignores 50% of the data. Therefore, variance and standard deviation are suggested as the most reliable measures of dispersion.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Quartile \space deviation = \frac{Q_{3}-Q_{1}}{\ 2}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Variance and Standard Deviation&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;:&lt;/strong&gt; These measures of dispersion tell you how much spread out the data points are from the mean. To find out the variance, deduct each value from the mean, square it, sum each square, and divide it by the total number of values.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Variance = \frac{∑(x-\bar{x})^2}{\ {n-1}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Standard deviation is the square root of the variance. In the asymmetrical distribution, 68.25% of data points fall between &lt;strong&gt;mean ± 1s.d&lt;/strong&gt;; 95.45% of data points fall between &lt;strong&gt;mean ± 2s.d&lt;/strong&gt;; 99.73% of the data points fall between &lt;strong&gt;mean ± 3s.d&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Mathematically, the standard deviation can be expressed as below:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{Standard \space deviation} = {\sqrt\frac{∑(x-\bar{x})^2}{\ {n-1}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;No panic! In R, you can easily compute the range, quartile deviation, variance, and standard deviation. Suppose you have the weekly expenditures of two projects over 10 weeks.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##    Projects Expenditures
## 1  project1        10000
## 2  project1        15400
## 3  project1        14250
## 4  project1        13000
## 5  project1        11250
## 6  project1        10450
## 7  project1         9035
## 8  project1        12500
## 9  project1        14125
## 10 project1        11240
## 11 project2        10500
## 12 project2        15000
## 13 project2        14300
## 14 project2        12500
## 15 project2        11300
## 16 project2        10500
## 17 project2         8530
## 18 project2        12500
## 19 project2        14120
## 20 project2        11320&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The below functions can be used to compute the measures of dispersion.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

df %&amp;gt;% 
  group_by(Projects) %&amp;gt;% 
  summarise(Range = max(Expenditures) - min(Expenditures),
            &amp;#39;Quartile Deviation&amp;#39; = IQR(Expenditures)/2,
            Variance = var(Expenditures),
            &amp;#39;Standard Deviation&amp;#39; = sd(Expenditures)) %&amp;gt;% 
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Projects&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Range&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Quartile Deviation&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Variance&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Standard Deviation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;project1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6365&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1598.125&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4285078&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2070.043&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;project2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6470&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1507.500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4082801&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2020.594&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As the above table shows, based on &lt;strong&gt;Range&lt;/strong&gt; as a measure of dispersion that includes only minimum and maximum values, the data points in the second group (project2) are more scattered while based on the &lt;strong&gt;Standard deviation&lt;/strong&gt; the data points in that group are less scattered&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;relative-measures-of-dispersion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Relative measures of dispersion&lt;/h2&gt;
&lt;p&gt;For comparing data among two or more than two groups that differ significantly in their averages, and for unit free comparison the relative measures of dispersion are used which is known as the coefficient of dispersion (C.D).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coefficient of dispersion in terms of range:&lt;/strong&gt; C.D in terms of range is the distance between the minimum value and maximum value divided by sum of the minimum and maximum values.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{C.D\space in\space terms\space of\space range} = {\frac{X_{max} - X_{min}}{\ X_{max} + X_{min}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coefficient of dispersion in terms of quartile deviation:&lt;/strong&gt; C.D in terms of quartile deviation is the distance between first quartile and third quartile divided by the sum of the first and third quartiles.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{C.D\space in\space terms\space of\space quartile \space deviation} = {\frac{Q_{3} - Q_{1}}{\ Q_{3} + Q_{1}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coefficient of dispersion in terms of standard deviation:&lt;/strong&gt; C.D in terms of standard deviation is defined as the standard deviation divided by the mean.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[{C.D\space in\space terms\space of\space S.D} = {\frac{S.D}{\bar{X}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coefficient of Variation (C.V):&lt;/strong&gt; 100 times the coefficient of dispersion based on the standard deviation is the coefficient of variation.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[C.V = 100 * \frac{S.D}{\bar{X}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Let’s find the relative measures of dispersion for the above data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(raster)

df %&amp;gt;% 
  group_by(Projects) %&amp;gt;% 
  summarise(&amp;#39;C.D in terms of range&amp;#39; = (max(Expenditures)-min(Expenditures)/max(Expenditures)+min(Expenditures)),
            &amp;#39;C.D in terms of standard deviation&amp;#39; = sd(Expenditures)/mean(Expenditures),
            # &amp;#39;Coefficient of Variation&amp;#39; = 100 * sd(Expenditures)/mean(Expenditures),
            &amp;#39;Coefficient of Variation&amp;#39; = cv(Expenditures)) %&amp;gt;% 
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;9%&#34; /&gt;
&lt;col width=&#34;24%&#34; /&gt;
&lt;col width=&#34;38%&#34; /&gt;
&lt;col width=&#34;27%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Projects&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;C.D in terms of range&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;C.D in terms of standard deviation&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Coefficient of Variation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;project1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24434.41&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1707252&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17.07252&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;project2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23529.43&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1675868&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.75868&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Quartiles are values that divide the data into quarters. The first quartile (Q1) is the middle number between the smallest number and the median of the data. The second quartile, (Q2) is the median of the data set. The third quartile (Q3) is the middle number between the median and the largest number.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;In R, the var() and sd() functions compute the sample variance and sample standard deviation. Therefore, the n-1 is used in the denominator.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Standard deviation as measure of dispersion to compare variability among two groups should be used only when both groups have the same central value. When the central value of both groups differ widely, the coefficient of dispersion in terms of standard deviation or coefficient of variance should be used.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What is Central Tendency?</title>
      <link>/post/measures-of-central-tendency-using-r/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/measures-of-central-tendency-using-r/</guid>
      <description>


&lt;p&gt;Before going directly to measures of central tendency, I want you to look at the data below. This is a table of weekly expenditures of two projects over the course of 10 weeks. Now tell me which one is cost-efficient than the other, or both are the same?&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;project1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;project2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;10000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;15400&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;14250&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;13000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;11250&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;10450&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;9035&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;12500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;14125&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;11240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11320&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;What if I show you this?&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;projects&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;average&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;project1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12125&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;project2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12107&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Using the average, it is easy to compare the expenditures of both projects. This is one of the primary purposes of the measures of central tendency to summarize the data into a single number that represents the center point of the data.&lt;/p&gt;
&lt;p&gt;Measures of central tendency show the point where most values of a the data fall and represent the tendency of the data to cluster around a middle value using different approaches. Selecting the appropriate method, however, depends on the type of data you are dealing with. In this post, you will learn when to use a particular measure of central tendency and how to calculate it using R.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mean:&lt;/strong&gt; Mean is the measure of central tendency that you are most familiar with. Its use is most often with continuous data. You just add up all of the values and divide by the number of observations in the data. The mean locates the center accurately when the data is normally distributed. In fact, in any symmetrical distribution the mean, median and mode are equal. You can, therefore, use any of the measures of the central tendency to locate the center of the data. However, the presence of extreme values pulls the mean away from the center while the median is less affected by outliers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;imgs\measuresofcentraltendency.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As mean is susceptible to the presence of outliers&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;, it loses its ability to provide the best central location when the data is skewed. As the above figures show that mean is dragged in the direction of the skew. Thus, using only the mean to approximate the center of the data can often be misleading.&lt;/p&gt;
&lt;p&gt;In R, the &lt;code&gt;mean()&lt;/code&gt; function can be used to calculate the arithmetic mean. It takes a vector of values as input and returns the average.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# use (na.rm = TRUE) if there is any missing value in the list of values
mean(c(10000, 15400, 14250, 13000, 11250, 10450, 9035, 12500, 14125, 11240), na.rm = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 12125&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Median:&lt;/strong&gt; Median is the middle point of the data that is arranged in ascending or descending order. If a dataset contains an even number of values, the median is the mean of the two middle values. In other words, the median is the middle of an ordered list of values. Median is less likely to be influenced by the presence of outliers. Therefore, it is the most preferred measure of central tendency when the distribution of the data is skewed. Moreover, the median is used when there is an open-ended distribution. For example, if you have data that measures numbers of employees and the options are 1, 2, 3, 4, “5 or more”. The “5 or more” option is open-ended and the exact value is unknown. Thus, it makes calculating the mean impossible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;median()&lt;/code&gt; function can be used to compute the median. It takes a vector of values as input and returns the value that is occurred most frequently.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# use (na.rm = TRUE) if there is any missing value in the list of values
median(c(10000, 15400, 14250, 13000, 11250, 10450, 9035, 12500, 14125, 11240), na.rm = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 11875&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mode:&lt;/strong&gt; Mode is preferred when you have a categorical data. It is not often used with the continuous data because there are an infinite number of values between two values and it is very unlikely that two or more values will be exactly equal. Mode represents the most common value -the value that occurs most frequently- in the data. In some cases, a dataset may contain multiple modes while some datasets may not have any mode at all&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To the best of my knowledge, there is not any built-in function in R to find out mode in a vector of values. Therefore, below two steps must be followed:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;count the frequency of each value using &lt;code&gt;table()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;use the result of the first step as an input into the &lt;code&gt;which.max()&lt;/code&gt; function to find the mode.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also, you can use below code to program a new function called &lt;strong&gt;Mode&lt;/strong&gt; to find the mode in a given vector of values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Mode &amp;lt;- function(x) {
  as.character(
    pull(
      filter(
        data.frame(
          table(x)
        ),
        Freq == max(Freq)),
      x)
  )
}

Mode(c(2, 4, 7, 2, 3, 2, 5, 7, 9))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following table shows what the best measure of central tendency is with respect to different types of variables.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;Types of the variable&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;The best measure of central tendency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Nominal&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Ordinal&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Median / Mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Continuous (not skewed)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Mean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Continuous (skewed)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Median&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Outliers are values that are notably different from the rest of the data. Usually, any value larger than 1.5IQR above the third quartile or lower than 1.5IQR below the first quartile is considered as outlier.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualizing Distribution of Data | box-plot</title>
      <link>/post/visualizing-distribution-of-data-in-r-box-plot/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/visualizing-distribution-of-data-in-r-box-plot/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#why-box-plot&#34;&gt;Why box-plot?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#box-plot-using-the-base-r-function&#34;&gt;Box-plot using the base R function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#box-plot-using-the-ggplot2-package&#34;&gt;Box-plot using the ggplot2 package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;why-box-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why box-plot?&lt;/h2&gt;
&lt;p&gt;Box-plot is one of the effective ways to visually represent the distribution of data and it gives you an overall idea about how the data looks. Also, it is one of the best tools to identify the outliers to check if an association you find in your analysis can be explained by the presence of potential unusual observations.&lt;/p&gt;
&lt;p&gt;The graph shown below is an example of box-plot where the box shows the interquartile range (IQR), the horizontal line inside the box presents the median (50th percentile), and the whiskers (lines extending from the box) represent maximum value that is not an outlier (1.5 IQR above the third quartile) and minimum value that is not an outlier (1.5 IQR below the first quartile). All individual points outside the whiskers are considered as outliers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;imgs/ComparingDistributionofDatainRbox-plot.jpg&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First quartile (Q1 / 25&lt;sup&gt;th&lt;/sup&gt; Percentile) also knows as lower quartile is the center of the lower half of the data.&lt;/li&gt;
&lt;li&gt;Median (Q2 / 50&lt;sup&gt;th&lt;/sup&gt; Percentile) is the middle value of the data.&lt;/li&gt;
&lt;li&gt;Third quartile (Q3 / 75&lt;sup&gt;th&lt;/sup&gt; Percentile) also known as upper quartile is center of the upper half of the data.&lt;/li&gt;
&lt;li&gt;Interquartile range (IQR) shows the middle half of the data. (distance between first and third quartile)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Box-plots are usually a useful way to compare the distribution of data among two or more groups, or to compare the distribution of data among one or more than one group across time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;box-plot-using-the-base-r-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Box-plot using the base R function&lt;/h2&gt;
&lt;p&gt;Let’s use the below data as an example. The first column shows the gender of each observation, the values in the second column are pre-test scores and the values in the third column are post-test scores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(
  gender    = c(&amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Male&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;, &amp;quot;Female&amp;quot;),
  pre_test =    c(30,   26, 24, 19, 27, 21, 31, 16, 16, 26, 28, 29, 36, 25, 27, 24, 32, 30, 33, 26),
  post_test =   c(35,   31, 29, 24, 32, 26, 36, 21, 21, 31, 33, 34, 41, 30, 32, 29, 37, 35, 38, 31)
)

df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gender pre_test post_test
## 1    Male       30        35
## 2    Male       26        31
## 3    Male       24        29
## 4    Male       19        24
## 5    Male       27        32
## 6    Male       21        26
## 7    Male       31        36
## 8    Male       16        21
## 9    Male       16        21
## 10 Female       26        31
## 11 Female       28        33
## 12 Female       29        34
## 13 Female       36        41
## 14 Female       25        30
## 15 Female       27        32
## 16 Female       24        29
## 17 Female       32        37
## 18 Female       30        35
## 19 Female       33        38
## 20 Female       26        31&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The base R function to build a boxplot is &lt;code&gt;boxplot()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(df$pre_test, main=&amp;quot;Pre-test&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-08-visualizing-distribution-of-data-in-r-box-plot/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s combine both plots for better comparison.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(df[,c(&amp;quot;pre_test&amp;quot;, &amp;quot;post_test&amp;quot;)], main = &amp;quot;Pre-test vs Post test&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-08-visualizing-distribution-of-data-in-r-box-plot/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;box-plot-using-the-ggplot2-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Box-plot using the ggplot2 package&lt;/h2&gt;
&lt;p&gt;I prefer the ggplot2 plots because the output is nicer and importantly it can be easily modified compared to base R graphs, moreover, it is more popular among R users.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;geom_box()&lt;/code&gt; function from the &lt;strong&gt;ggplot2&lt;/strong&gt; package can be used to create a box-plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;ggplot2&amp;quot;)
library(ggplot2)

ggplot(df) +
  geom_boxplot(aes(y = pre_test, x = &amp;quot;1: Pre-test&amp;quot;)) +
  geom_boxplot(aes(y = post_test, x = &amp;quot;2: Post-test&amp;quot;)) +
  theme_bw() +
  labs(title = &amp;quot;Pre-test vs. Post-test scores&amp;quot;, x = NULL, y = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-08-visualizing-distribution-of-data-in-r-box-plot/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The plot on the left side shows the distribution of pre-test scores and the one on the right side shows the distribution of post-test scores. The above plot shows that average post-test score (31.5) is higher compare to the pre-test (26.5).&lt;/p&gt;
&lt;p&gt;It is also possible to use box-plot to visualize the distribution of data by categories of another variable as well, see below example for instance.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df) +
  geom_boxplot(aes(y = pre_test, x = &amp;quot;1: Pre-test&amp;quot;, fill = gender), alpha = 0.25) +
  geom_boxplot(aes(y = post_test, x = &amp;quot;2: Post-test&amp;quot;, fill = gender), alpha = 0.25) +
  theme_bw() +
  labs(title = &amp;quot;Pre-test vs. Post-test scores, by gender&amp;quot;, x = NULL, y = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-08-visualizing-distribution-of-data-in-r-box-plot/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The above plot shows that on average females have higher score (boxes in red color) compare to those of males (boxes in blue color) in both pre-test and post-test.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Calculating Average of Percentages</title>
      <link>/post/calculating-averag-of-percentages/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/calculating-averag-of-percentages/</guid>
      <description>


&lt;style&gt; 
  body {
    text-align: justify}
&lt;/style&gt;
&lt;p&gt;Calculating the average of percentages is &lt;strong&gt;NOT&lt;/strong&gt; similar to calculating the average of numbers.&lt;/p&gt;
&lt;p&gt;I am conducting data analysis trainings once every two months and at the end of each class I ask students if they want to join the advanced data analysis class that I organize once each year. Below data frame contains part of the actual data which I collected from those who have participated in my classes in the past few months which basically has three variables as following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;class&lt;/strong&gt;: either a trainee is from class 1 or class 2.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;education&lt;/strong&gt;: highest education level of trainees&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;advanced_class&lt;/strong&gt;: a dummy variable where &lt;code&gt;TRUE&lt;/code&gt; indicates a trainee is eager to participate in the advanced class and &lt;code&gt;FALAE&lt;/code&gt; indicates a trainee doesn’t want to attend in the advanced class.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(
  class = c(&amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 1&amp;quot;,&amp;quot;class 1&amp;quot;, &amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;,&amp;quot;class 1&amp;quot;, &amp;quot;class 1&amp;quot;, &amp;quot;class 1&amp;quot;,&amp;quot;class 2&amp;quot;),
  education = c(&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;,&amp;quot;BA&amp;quot;,&amp;quot;MA&amp;quot;),
  advanced_class = c(TRUE,TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,TRUE,TRUE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,FALSE,TRUE)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      class education advanced_class
## 1  class 1        BA           TRUE
## 2  class 2        MA           TRUE
## 3  class 1        BA          FALSE
## 4  class 1        BA           TRUE
## 5  class 2        MA          FALSE
## 6  class 2        MA           TRUE
## 7  class 1        BA           TRUE
## 8  class 1        BA          FALSE
## 9  class 1        BA           TRUE
## 10 class 2        MA           TRUE
## 11 class 1        MA          FALSE
## 12 class 1        MA           TRUE
## 13 class 2        BA          FALSE
## 14 class 2        MA           TRUE
## 15 class 2        BA          FALSE
## 16 class 1        MA          FALSE
## 17 class 1        BA          FALSE
## 18 class 1        BA           TRUE
## 19 class 1        MA           TRUE
## 20 class 2        MA           TRUE
## 21 class 1        BA          FALSE
## 22 class 1        BA          FALSE
## 23 class 1        MA          FALSE
## 24 class 2        MA          FALSE
## 25 class 1        BA           TRUE
## 26 class 1        MA           TRUE
## 27 class 1        BA          FALSE
## 28 class 2        MA           TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s find the percentage of each group who are eager to participate in the advanced class.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)

df %&amp;gt;%
  {round(prop.table(table(.$class, .$advanced_class),1)*100,2)}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          
##           FALSE TRUE
##   class 1    50   50
##   class 2    40   60&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Above table shows that 60% of trainees from class 2 and 50% of trainees from class 1 want to join the advanced class. Does this mean that &lt;code&gt;(60%+50%)/2=&lt;/code&gt;&lt;strong&gt;55%&lt;/strong&gt; of all trainees are intended to join the advanced class?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
theme_set(theme_bw())

round(prop.table(table(df$class, df$advanced_class),1)*100,1) %&amp;gt;%
  data.frame() %&amp;gt;%
  rename(class = Var1,
         advanced_class=Var2,
          percentage = Freq) %&amp;gt;%
  filter(advanced_class!=FALSE) %&amp;gt;%
  # mutate(average = sum(percentage)/2) %&amp;gt;%
  ggplot(aes(x=class, y=percentage, fill = class)) + geom_col() +
  geom_text(aes(label = percentage), nudge_x=0, nudge_y = 2) +
  geom_hline(yintercept = (50+60)/2, linetype = &amp;quot;dashed&amp;quot;, color = &amp;quot;red&amp;quot;, size = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-05-calculating-averag-of-percentages/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The answer is &lt;strong&gt;No&lt;/strong&gt;. Because each group does not represent equal numbers of trainees.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  {table(.$class)}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## class 1 class 2 
##      18      10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As shown above, there are 18 trainees from class 1 and 10 trainees from class 2. It means that 60% of those form the second class represents only 6 trainees and 50% of those from the first class represents 9 trainees.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;class 1: &lt;code&gt;(50 / 100) x 18 = 9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;class 2: &lt;code&gt;(60 / 100) x 10 = 6&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the above result we can say that &lt;code&gt;9+6=&lt;/code&gt;15 out of all &lt;code&gt;18+10=&lt;/code&gt;28 trainees in both classes said they would like to join the advanced class. Therefore we can say that &lt;code&gt;(15/28)*100=&lt;/code&gt;53.57% of all trainees want to join the advanced class.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  {round(prop.table(table(.$advanced_class))*100,2)}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## FALSE  TRUE 
## 46.43 53.57&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It can be observed that there is an inconsistency between &lt;code&gt;(6+9/28)*100 =&lt;/code&gt;&lt;strong&gt;53.57%&lt;/strong&gt; and &lt;code&gt;(60%+50%)/2=&lt;/code&gt;&lt;strong&gt;55%&lt;/strong&gt;. Hence, the temptation of averaging percentages can lead to an inaccurate result.&lt;/p&gt;
&lt;p&gt;When sample size in both groups is equal, however, the average of percentages agrees with the accurate percentage calculation.&lt;/p&gt;
&lt;p&gt;For example, the above data shows that 64.29% of trainees with a master degree would like to join the advanced data analysis class and this proportion is 42.86% among those with a bachelor degree.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  {round(prop.table(table(.$education, .$advanced_class),1)*100,2)}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     
##      FALSE  TRUE
##   BA 57.14 42.86
##   MA 35.71 64.29&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here the average of both percentages is &lt;code&gt;(64.29%+42.86)/2=&lt;/code&gt;&lt;strong&gt;53.57%&lt;/strong&gt; which is equal to accurate calculation of the percentage of trainees who are intended to join the advanced data analysis training.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;round(prop.table(table(df$education, df$advanced_class),1)*100,1) %&amp;gt;%
  data.frame() %&amp;gt;%
  rename(education = Var1,
         advanced_class=Var2,
         percentage = Freq) %&amp;gt;%
  filter(advanced_class!=FALSE) %&amp;gt;%
  ggplot(aes(x=education, y=percentage, fill = education)) + geom_col()+
  geom_text(aes(label=percentage), nudge_y = 2) +
  geom_hline(yintercept = (42.9+64.3)/2, linetype = &amp;quot;dashed&amp;quot;, color = &amp;quot;red&amp;quot;, size = 2 )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-05-calculating-averag-of-percentages/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The reason is that there is an equal number of trainees with master and bachelor degrees.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  {table(.$education)}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## BA MA 
## 14 14&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Average of percentages would lead you to an inaccurate result unless all groups represent the equal sample size. The reason is simple, when two groups are different in size then the same percentage in both groups will give you two different numbers. For example, 10% of a group of 100 individuals is 10 while 10% of a group of 150 individuals is 15.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rename Data Frame Columns</title>
      <link>/post/rename-data-frame-columns/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/post/rename-data-frame-columns/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#rename-column-names-with-r-base-functions&#34;&gt;Rename column names with R base functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rename-column-names-with-dplyr&#34;&gt;Rename column names with dplyr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rename-column-names-with-data.table&#34;&gt;Rename column names with data.table&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;There are several ways of renaming variables in R. In this post you will learn how to change a column name using base R function, the dplyr way and using data.table package.&lt;/p&gt;
&lt;p&gt;I will use the R built-in &lt;strong&gt;iris&lt;/strong&gt; data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;rename-column-names-with-r-base-functions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Rename column names with R base functions&lt;/h1&gt;
&lt;p&gt;Let’s change &lt;strong&gt;Sepal.Length&lt;/strong&gt; to &lt;strong&gt;S.P&lt;/strong&gt;. The procedure is simple; get column names using &lt;code&gt;names()&lt;/code&gt; or &lt;code&gt;colnames&lt;/code&gt;, extract the specific column name, and assign a new name.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(iris)[colnames(iris)==&amp;quot;Sepal.Length&amp;quot;] &amp;lt;- &amp;quot;S.P&amp;quot;
head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   S.P Sepal.Width Petal.Length Petal.Width Species
## 1 5.1         3.5          1.4         0.2  setosa
## 2 4.9         3.0          1.4         0.2  setosa
## 3 4.7         3.2          1.3         0.2  setosa
## 4 4.6         3.1          1.5         0.2  setosa
## 5 5.0         3.6          1.4         0.2  setosa
## 6 5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code does the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;colnames(iris)&lt;/code&gt; looks into all the names in the &lt;strong&gt;iris&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;names(iris) == &amp;quot;Sepal.Length&amp;quot;&lt;/code&gt; returns a vector with true and false values to extract the variable name you want to change.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;- &amp;quot;S.P&amp;quot;&lt;/code&gt; assigns the new name.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can also rename a variable by its index as well. For example, let’s change &lt;strong&gt;Sepal.Width&lt;/strong&gt; [the second column] to &lt;strong&gt;S.W&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(iris)[2] &amp;lt;- &amp;quot;S.W&amp;quot;
head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   S.P S.W Petal.Length Petal.Width Species
## 1 5.1 3.5          1.4         0.2  setosa
## 2 4.9 3.0          1.4         0.2  setosa
## 3 4.7 3.2          1.3         0.2  setosa
## 4 4.6 3.1          1.5         0.2  setosa
## 5 5.0 3.6          1.4         0.2  setosa
## 6 5.4 3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rename-column-names-with-dplyr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Rename column names with dplyr&lt;/h1&gt;
&lt;p&gt;You can use &lt;code&gt;rename()&lt;/code&gt; function to change column names as following. For instance, let’s change &lt;strong&gt;Petal.Length&lt;/strong&gt; to &lt;strong&gt;P.L&lt;/strong&gt; and &lt;strong&gt;Petal.Width&lt;/strong&gt; to &lt;strong&gt;P.W&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;dplyr&amp;quot;)
library(dplyr)

iris %&amp;gt;%
  rename(
    P.L = Petal.Length,
    P.W = Petal.Width
  ) %&amp;gt;%
  head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   S.P S.W P.L P.W Species
## 1 5.1 3.5 1.4 0.2  setosa
## 2 4.9 3.0 1.4 0.2  setosa
## 3 4.7 3.2 1.3 0.2  setosa
## 4 4.6 3.1 1.5 0.2  setosa
## 5 5.0 3.6 1.4 0.2  setosa
## 6 5.4 3.9 1.7 0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;rename-column-names-with-data.table&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Rename column names with data.table&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;setnames()&lt;/code&gt; function from &lt;strong&gt;data.table&lt;/strong&gt; package can be used to rename a variable. The syntax is &lt;code&gt;setnames(df, &amp;quot;old_name&amp;quot;, &amp;quot;new_name&amp;quot;)&lt;/code&gt;. As an example, let’s change &lt;strong&gt;Species&lt;/strong&gt; to &lt;strong&gt;SPECIES&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;data.table&amp;quot;)
library(data.table)
setnames(iris,
         &amp;quot;Species&amp;quot;, &amp;quot;SPECIES&amp;quot;)
colnames(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Sepal.Length&amp;quot; &amp;quot;Sepal.Width&amp;quot;  &amp;quot;Petal.Length&amp;quot; &amp;quot;Petal.Width&amp;quot;  &amp;quot;SPECIES&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Terms</title>
      <link>/terms/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>/terms/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
